services:
  agent:
    command: sh -c 'bin/wait && python -m deeppavlov_agent.run -ch http_client -pl assistant_dists/dream_russian/pipeline_conf.json --cors'
    environment:
      WAIT_HOSTS: "dff-program-y-skill:8008, sentseg:8011, convers-evaluation-selector:8009, 
          dff-intent-responder-skill:8012, intent-catcher:8014, badlisted-words:8018,
          sentrewrite:8017, ner:8021, convert-reddit:8029, personal-info-skill:8030,
          spelling-preprocessing:8074, entity-linking:8075, wiki-parser:8077,
          dff-friendship-skill:8086, dff-wiki-skill:8111, entity-detection:8103,
          dff-template-skill:8120"
      WAIT_HOSTS_TIMEOUT: ${WAIT_TIMEOUT:-480}

  dff-program-y-skill:
    env_file: [.env]
    build:
      args:
        SERVICE_PORT: 8008
        SERVICE_NAME: dff_program_y_skill
      context: .
      dockerfile: ./skills/dff_program_y_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8008 --reload
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 1024M

  sentseg:
    env_file: [.env]
    build:
      context: ./annotators/SentSeg/
    command: flask run -h 0.0.0.0 -p 8011
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 1.5G

  convers-evaluation-selector:
    env_file: [.env]
    build:
      context: .
      dockerfile: ./response_selectors/convers_evaluation_based_selector/Dockerfile
    command: flask run -h 0.0.0.0 -p 8009
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  sentrewrite:
    env_file: [.env]
    build:
      context: ./annotators/SentRewrite/
    command: flask run -h 0.0.0.0 -p 8017
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 512M

  dff-intent-responder-skill:
    env_file: [ .env ]
    build:
      args:
        SERVICE_PORT: 8012
        SERVICE_NAME: dff_intent_responder_skill
      context: .
      dockerfile: ./skills/dff_intent_responder_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8012 --reload
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 128M

  intent-catcher:
    env_file: [.env]
    build:
      context: ./annotators/IntentCatcher/
    command:  python -m flask run -h 0.0.0.0 -p 8014 --without-threads
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 3.5G
        reservations:
          memory: 3.5G

  badlisted-words:
    env_file: [.env]
    build:
      context: annotators/BadlistedWordsDetector/
    command: flask run -h 0.0.0.0 -p 8018
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  ner:
    env_file: [.env]
    build:
      context: ./annotators/NER/
    command: flask run -h 0.0.0.0 -p 8021
    environment:
      - FLASK_APP=server
    tty: true
    deploy:
      resources:
        limits:
          memory: 1512M
        reservations:
          memory: 1512M

  convert-reddit:
    env_file: [.env]
    build:
      context: ./skills/convert_reddit/
    command: flask run -h 0.0.0.0 -p 8029
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 1536M
        reservations:
          memory: 1536M

  personal-info-skill:
    env_file: [.env]
    build:
      context: .
      dockerfile: ./skills/personal_info_skill/Dockerfile
    command: flask run -h 0.0.0.0 -p 8030
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 128M

  entity-linking:
    env_file: [.env]
    build:
      args:
        CONFIG: kbqa_entity_linking_page.json
        PORT: 8075
        SRC_DIR: annotators/entity_linking
        COMMIT: 5b99ac3392e8e178e2bb4f9b218d4ddb2ec2e242
      context: ./
      dockerfile: annotators/entity_linking/Dockerfile
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        limits:
          memory: 23G
        reservations:
          memory: 23G

  wiki-parser:
    env_file: [.env]
    build:
      args:
        WIKI_LITE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_lite.hdt
        WIKI_LITE_INDEX_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_lite.hdt.index.v1-1
        WIKI_CACHE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_cache.json
        CONFIG: wiki_parser.json
        PORT: 8077
        SRC_DIR: annotators/wiki_parser
        COMMIT: ff5b156d16a949c3ec99da7fb60ae907dec37a41
      context: ./
      dockerfile: annotators/wiki_parser/Dockerfile
    command: flask run -h 0.0.0.0 -p 8077
    environment:
      - CUDA_VISIBLE_DEVICES=''
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  spelling-preprocessing:
    env_file: [.env]
    build:
      context: ./annotators/spelling_preprocessing/
    command: flask run -h 0.0.0.0 -p 8074
    environment:
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 50M

  dff-friendship-skill:
    env_file: [.env]
    build:
      args:
        SERVICE_PORT: 8086
        SERVICE_NAME: dff_friendship_skill # has to be the same with skill dir name
      context: .
      dockerfile: ./skills/dff_friendship_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8086
    # command:  flask run -h 0.0.0.0 -p 8086
    # environment:
    #   - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  dff-wiki-skill:
    env_file: [.env]
    build:
      args:
        SERVICE_PORT: 8111
        SERVICE_NAME: dff_wiki_skill
        COMMIT: 5b99ac3392e8e178e2bb4f9b218d4ddb2ec2e242
      context: ./
      dockerfile: ./skills/dff_wiki_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8111
    # command:  flask run -h 0.0.0.0 -p 8111
    # environment:
    #   - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M

  entity-detection:
    env_file: [.env]
    build:
      args:
        CONFIG: dialog_entity_detection.json
        PORT: 8103
        SRC_DIR: annotators/entity_detection/
        COMMIT: 5d27dca3dfa0cf481324facd73f2e02f579f66b3
      context: ./
      dockerfile: annotators/entity_detection/Dockerfile_new
    command: flask run -h 0.0.0.0 -p 8103
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - FLASK_APP=server
    deploy:
      resources:
        limits:
          memory: 2.5G
        reservations:
          memory: 2.5G

  dff-template-skill:
    env_file: [.env]
    build:
      args:
        SERVICE_PORT: 8120
        SERVICE_NAME: dff_template_skill
      context: .
      dockerfile: ./skills/dff_template_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8120 --reload
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 128M
version: '3.7'
