Step 1/20 : FROM python:3.10
 ---> 748d669298ac
Step 2/20 : RUN mkdir /src
 ---> Using cache
 ---> 1fa4a85ef494
Step 3/20 : COPY ./response_selectors/ranking_and_intent_based_response_selector/requirements.txt /src/requirements.txt
 ---> Using cache
 ---> 055079ff3b55
Step 4/20 : RUN pip install -r /src/requirements.txt
 ---> Using cache
 ---> 91d0501cbdd2
Step 5/20 : ARG SERVICE_PORT
 ---> Using cache
 ---> f1dea781248f
Step 6/20 : ENV SERVICE_PORT ${SERVICE_PORT}
 ---> Using cache
 ---> 355119555101
Step 7/20 : ARG SENTENCE_RANKER_ANNOTATION_NAME
 ---> Using cache
 ---> 59b9a3febf0a
Step 8/20 : ENV SENTENCE_RANKER_ANNOTATION_NAME ${SENTENCE_RANKER_ANNOTATION_NAME}
 ---> Using cache
 ---> e188c0a1c8ef
Step 9/20 : ARG SENTENCE_RANKER_SERVICE_URL
 ---> Using cache
 ---> 3fdfffa33aff
Step 10/20 : ENV SENTENCE_RANKER_SERVICE_URL ${SENTENCE_RANKER_SERVICE_URL}
 ---> Using cache
 ---> 442534041581
Step 11/20 : ARG SENTENCE_RANKER_TIMEOUT
 ---> Using cache
 ---> 4dd1af75252c
Step 12/20 : ENV SENTENCE_RANKER_TIMEOUT ${SENTENCE_RANKER_TIMEOUT}
 ---> Using cache
 ---> 8dc46dcc0f23
Step 13/20 : ARG N_UTTERANCES_CONTEXT=5
 ---> Using cache
 ---> a489d0650fbb
Step 14/20 : ENV N_UTTERANCES_CONTEXT ${N_UTTERANCES_CONTEXT}
 ---> Using cache
 ---> 7aab5fc9de96
Step 15/20 : ARG FILTER_TOXIC_OR_BADLISTED=1
 ---> Using cache
 ---> 5d20e18b60fc
Step 16/20 : ENV FILTER_TOXIC_OR_BADLISTED ${FILTER_TOXIC_OR_BADLISTED}
 ---> Using cache
 ---> 7e03af2cd748
Step 17/20 : COPY ./response_selectors/ranking_and_intent_based_response_selector/ /src/
 ---> 68a99b6e3d75
Step 18/20 : WORKDIR /src
 ---> Running in 1c6cb86215be
Removing intermediate container 1c6cb86215be
 ---> 0254ed47b446
Step 19/20 : COPY ./common/ ./common/
 ---> 825b72e33e68
Step 20/20 : CMD gunicorn --workers=1 server:app -b 0.0.0.0:${SERVICE_PORT} --timeout=1200
 ---> Running in dbca51ad6af9
Removing intermediate container dbca51ad6af9
 ---> 3dc71f6405a1

[Warning] One or more build-args [SERVICE_NAME LANGUAGE FALLBACK_FILE] were not consumed
Successfully built 3dc71f6405a1
Successfully tagged gl_dream_ranking-and-intent-based-response-selector:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [SERVICE_PORT SERVICE_NAME] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_factoid-qa:latest
Step 1/9 : FROM python:3.10
 ---> 748d669298ac
Step 2/9 : WORKDIR /src
 ---> Using cache
 ---> 6818015439c3
Step 3/9 : COPY ./services/openai_api_lm/requirements.txt /src/requirements.txt
 ---> Using cache
 ---> 259f5d8b3b28
Step 4/9 : RUN pip install -r /src/requirements.txt
 ---> Using cache
 ---> ab81147d6875
Step 5/9 : ARG PRETRAINED_MODEL_NAME_OR_PATH
 ---> Using cache
 ---> aad6aaad5416
Step 6/9 : ENV PRETRAINED_MODEL_NAME_OR_PATH ${PRETRAINED_MODEL_NAME_OR_PATH}
 ---> Using cache
 ---> cda858e1e21f
Step 7/9 : COPY services/openai_api_lm /src
 ---> Using cache
 ---> 563e3eddd0e0
Step 8/9 : COPY common /src/common
 ---> Using cache
 ---> 52ea50d16fe4
Step 9/9 : CMD gunicorn --workers=1 server:app -b 0.0.0.0:${SERVICE_PORT} --timeout=300
 ---> Using cache
 ---> bf7cb58a7881

[Warning] One or more build-args [SERVICE_PORT SERVICE_NAME ENVVARS_TO_SEND] were not consumed
Successfully built bf7cb58a7881
Successfully tagged gl_dream_openai-api-chatgpt:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [SERVICE_PORT SRC_DIR SERVICE_NAME CONFIG] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_property-extraction:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

Successfully built 36a8e057a63f
Successfully tagged gl_dream_sentseg:latest
Step 1/18 : FROM python:3.7
 ---> 16d93ae3411b
Step 2/18 : ENV DEBIAN_FRONTEND noninteractive
 ---> Using cache
 ---> fbd10aeb2891
Step 3/18 : RUN apt-get update -y --fix-missing &&     apt-get install -y -q         build-essential         openssl         git         libssl-dev         libffi-dev         cron &&     rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> 6d22433d5b02
Step 4/18 : ENV DEBIAN_FRONTEND noninteractive
 ---> Using cache
 ---> e8dcb03ce381
Step 5/18 : ENV PYTHONPATH "${PYTHONPATH}:/dp-agent"
 ---> Using cache
 ---> 22a2832f11cf
Step 6/18 : ENV DPA_LAUNCHING_ENV "docker"
 ---> Using cache
 ---> 749822566241
Step 7/18 : RUN mkdir dp-agent
 ---> Using cache
 ---> b39e768398d9
Step 8/18 : WORKDIR /dp-agent
 ---> Using cache
 ---> 287e2f596534
Step 9/18 : RUN pip install --upgrade pip
 ---> Using cache
 ---> e5d92f0015af
Step 10/18 : RUN mkdir /pavlov &&     cd /pavlov &&     git clone https://github.com/deeppavlov/DeepPavlov &&     cd DeepPavlov &&     pip install -e .
 ---> Using cache
 ---> 025f3ff10072
Step 11/18 : RUN pip install sentry-sdk==0.16.0 requests==2.24.0 pandas GitPython==3.1.14 pyaml openpyxl==3.0.0 xlrd==1.2.0 ruamel-yaml==0.17.21
 ---> Using cache
 ---> 37ff24e17cdb
Step 12/18 : ARG AGENT_COMMIT=e1b385986e6b94c829fc672107c8b099ed54a70f
 ---> Using cache
 ---> f8c94a2abd37
Step 13/18 : RUN pip install https://codeload.github.com/deeppavlov/dp-agent/tar.gz/${AGENT_COMMIT}
 ---> Using cache
 ---> 1b333f59af33
Step 14/18 : ENV LANG C.UTF-8
 ---> Using cache
 ---> 566a3d5e34a2
Step 15/18 : ENV LC_ALL C.UTF-8
 ---> Using cache
 ---> 2e4d88b56573
Step 16/18 : ENV PYTHONPATH "${PYTHONPATH}:/dp-agent"
 ---> Using cache
 ---> cf3190f008b3
Step 17/18 : ENV DPA_LAUNCHING_ENV "docker"
 ---> Using cache
 ---> 551b1d70f6c8
Step 18/18 : COPY . /dp-agent/.
 ---> b1b3a0c8e7cf

Successfully built b1b3a0c8e7cf
Successfully tagged gl_dream_agent:latest
Step 1/17 : FROM pytorch/pytorch:1.5-cuda10.1-cudnn7-runtime
 ---> a10c611c2731
Step 2/17 : WORKDIR /src
 ---> Using cache
 ---> 0e53ebb95f76
Step 3/17 : ARG PRETRAINED_MODEL_NAME_OR_PATH
 ---> Using cache
 ---> 57903cc0720d
Step 4/17 : ENV PRETRAINED_MODEL_NAME_OR_PATH ${PRETRAINED_MODEL_NAME_OR_PATH}
 ---> Using cache
 ---> 36f331cf77b3
Step 5/17 : ARG CONFIG_NAME
 ---> Using cache
 ---> 9bd93b26bfcd
Step 6/17 : ENV CONFIG_NAME ${CONFIG_NAME}
 ---> Using cache
 ---> cacdde0e74a9
Step 7/17 : ARG SERVICE_PORT
 ---> Using cache
 ---> c068d108d730
Step 8/17 : ENV SERVICE_PORT ${SERVICE_PORT}
 ---> Using cache
 ---> 5e02a19dfced
Step 9/17 : ARG N_HYPOTHESES_TO_GENERATE
 ---> Using cache
 ---> f9bb875eadd8
Step 10/17 : ENV N_HYPOTHESES_TO_GENERATE ${N_HYPOTHESES_TO_GENERATE}
 ---> Using cache
 ---> 4a996aef451e
Step 11/17 : ARG MAX_HISTORY_DEPTH
 ---> Using cache
 ---> dfd4b1e5f015
Step 12/17 : ENV MAX_HISTORY_DEPTH ${MAX_HISTORY_DEPTH}
 ---> Using cache
 ---> 7c7f46f7a974
Step 13/17 : COPY ./services/dialogpt/requirements.txt /src/requirements.txt
 ---> Using cache
 ---> 5c68aa309b13
Step 14/17 : RUN pip install -r /src/requirements.txt
 ---> Using cache
 ---> 61d0d29b37f6
Step 15/17 : COPY ./services/dialogpt/ /src/
 ---> Using cache
 ---> e71dbedfa7a7
Step 16/17 : COPY ./common/ ./common/
 ---> Using cache
 ---> 04b5a973cea0
Step 17/17 : CMD gunicorn --workers=1 server:app -b 0.0.0.0:${SERVICE_PORT} --timeout=1200
 ---> Using cache
 ---> 464b036668d4

[Warning] One or more build-args [SERVICE_NAME] were not consumed
Successfully built 464b036668d4
Successfully tagged gl_dream_dialogpt:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [CONFIG SERVICE_PORT SERVICE_NAME] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_combined-classification:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [CONFIG_NAME INTENT_PHRASES_PATH SERVICE_PORT] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_intent-catcher:latest
Step 1/7 : FROM python:3.7.4
 ---> 9fa56d0addae
Step 2/7 : ARG SUMMARIZATION_REQUEST_TIMEOUT
 ---> Using cache
 ---> 797a5e935c01
Step 3/7 : ENV SUMMARIZATION_REQUEST_TIMEOUT ${SUMMARIZATION_REQUEST_TIMEOUT}
 ---> Using cache
 ---> 55c273e0abb5
Step 4/7 : COPY ${WORK_DIR}/requirements.txt /src/requirements.txt
 ---> Using cache
 ---> 74a47e1729f0
Step 5/7 : RUN pip install -r /src/requirements.txt
 ---> Using cache
 ---> cf694443d352
Step 6/7 : COPY ${WORK_DIR} /src
 ---> Using cache
 ---> faae82e4ea23
Step 7/7 : WORKDIR /src
 ---> Using cache
 ---> 4f0ceee18472

[Warning] One or more build-args [SERVICE_PORT SERVICE_NAME] were not consumed
Successfully built 4f0ceee18472
Successfully tagged gl_dream_summarization-annotator:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [WIKI_CACHE_DB CONFIG COMMIT SERVICE_NAME WIKI_LITE_INDEX_DB SRC_DIR FAST SERVICE_PORT WIKI_LITE_DB] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_wiki-parser:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [FINEGRAINED SERVICE_NAME SEQ_TAG_CONFIG CONFIG LOWERCASE SERVICE_PORT SRC_DIR] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_entity-detection:latest
Step 1/7 : FROM python:3.7.4
 ---> 9fa56d0addae
Step 2/7 : ARG PRETRAINED_MODEL_NAME
 ---> Using cache
 ---> c387071980fe
Step 3/7 : ENV PRETRAINED_MODEL_NAME ${PRETRAINED_MODEL_NAME}
 ---> Using cache
 ---> 5cf959a62895
Step 4/7 : COPY ${WORK_DIR}/requirements.txt /src/requirements.txt
 ---> Using cache
 ---> 8d23a3d2bd3c
Step 5/7 : RUN pip install -r /src/requirements.txt
 ---> Using cache
 ---> e54f66305e2a
Step 6/7 : COPY ${WORK_DIR} /src
 ---> Using cache
 ---> 79d1ed4ec314
Step 7/7 : WORKDIR /src
 ---> Using cache
 ---> 681af3cfe0a1

[Warning] One or more build-args [SERVICE_PORT SERVICE_NAME] were not consumed
Successfully built 681af3cfe0a1
Successfully tagged gl_dream_dialog-summarizer:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [PRETRAINED_MODEL_NAME_OR_PATH SERVICE_PORT SERVICE_NAME] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_sentence-ranker:latest
Step 1/27 : FROM python:3.9.16-slim
 ---> babdc67dc69c
Step 2/27 : WORKDIR /src
 ---> Using cache
 ---> 818116894af7
Step 3/27 : COPY common/dff/requirements.txt common-reqs.txt
 ---> Using cache
 ---> 1a67b83c5d6c
Step 4/27 : COPY skills/dff_template_prompted_skill/requirements.txt .
 ---> Using cache
 ---> 6f42488e49dd
Step 5/27 : RUN pip install --no-cache -r common-reqs.txt -r requirements.txt
 ---> Using cache
 ---> 0dd1a605ea86
Step 6/27 : RUN python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"
 ---> Using cache
 ---> 427f3e23e894
Step 7/27 : COPY skills/dff_template_prompted_skill/ ./
 ---> Using cache
 ---> 24e65db37ae6
Step 8/27 : COPY ./common/ ./common/
 ---> Using cache
 ---> 4bdebb796c7c
Step 9/27 : ARG SERVICE_NAME
 ---> Using cache
 ---> e4b09a53947e
Step 10/27 : ENV SERVICE_NAME ${SERVICE_NAME}
 ---> Using cache
 ---> ba76bb039436
Step 11/27 : ARG SERVICE_PORT
 ---> Using cache
 ---> b8af62452220
Step 12/27 : ENV SERVICE_PORT ${SERVICE_PORT}
 ---> Using cache
 ---> 15ff01334014
Step 13/27 : ARG PROMPT_FILE
 ---> Using cache
 ---> b0db987c7470
Step 14/27 : ENV PROMPT_FILE ${PROMPT_FILE}
 ---> Using cache
 ---> 431c4dc99a57
Step 15/27 : ARG GENERATIVE_SERVICE_URL
 ---> Using cache
 ---> b644b71c8c97
Step 16/27 : ENV GENERATIVE_SERVICE_URL ${GENERATIVE_SERVICE_URL}
 ---> Using cache
 ---> 79b231b00009
Step 17/27 : ARG GENERATIVE_TIMEOUT
 ---> Using cache
 ---> 8ffd30d58fb8
Step 18/27 : ENV GENERATIVE_TIMEOUT ${GENERATIVE_TIMEOUT}
 ---> Using cache
 ---> 5a321a135a8a
Step 19/27 : ARG GENERATIVE_SERVICE_CONFIG
 ---> Using cache
 ---> 81762afac78b
Step 20/27 : ENV GENERATIVE_SERVICE_CONFIG ${GENERATIVE_SERVICE_CONFIG}
 ---> Using cache
 ---> c724133c420f
Step 21/27 : ARG N_UTTERANCES_CONTEXT
 ---> Using cache
 ---> cae0101c0c1f
Step 22/27 : ENV N_UTTERANCES_CONTEXT ${N_UTTERANCES_CONTEXT}
 ---> Using cache
 ---> b6ac23ebf8b9
Step 23/27 : ARG ENVVARS_TO_SEND
 ---> Using cache
 ---> 854de81e92d1
Step 24/27 : ENV ENVVARS_TO_SEND ${ENVVARS_TO_SEND}
 ---> Using cache
 ---> 0dffd5a4b755
Step 25/27 : ARG ALLOW_PROMPT_RESET=0
 ---> Using cache
 ---> 544c7a9b0e0a
Step 26/27 : ENV ALLOW_PROMPT_RESET ${ALLOW_PROMPT_RESET}
 ---> Using cache
 ---> 64fbff668578
Step 27/27 : CMD gunicorn --workers=1 server:app -b 0.0.0.0:${SERVICE_PORT} --reload --timeout ${GENERATIVE_TIMEOUT:-30}
 ---> Using cache
 ---> 83184802107b

Successfully built 83184802107b
Successfully tagged gl_dream_dff-dream-persona-chatgpt-prompted-skill:latest
Step 1/15 : FROM python:3.9.16-slim
 ---> babdc67dc69c
Step 2/15 : WORKDIR /src
 ---> Using cache
 ---> 818116894af7
Step 3/15 : COPY annotators/prompt_selector/requirements.txt /src/requirements.txt
 ---> Using cache
 ---> 272cdeff5b9a
Step 4/15 : RUN pip install --upgrade pip && pip install --no-cache -r /src/requirements.txt
 ---> Using cache
 ---> 5836c3b88fcb
Step 5/15 : COPY ./annotators/prompt_selector/ /src/
 ---> Using cache
 ---> 8489cb78cce8
Step 6/15 : COPY ./common/ /src/common/
 ---> Using cache
 ---> fb1fd9270fc7
Step 7/15 : ARG SERVICE_PORT
 ---> Using cache
 ---> 81d0e6ba194d
Step 8/15 : ENV SERVICE_PORT ${SERVICE_PORT}
 ---> Using cache
 ---> f817b619d1f4
Step 9/15 : ARG SENTENCE_RANKER_SERVICE_URL
 ---> Using cache
 ---> a7d42ee788a1
Step 10/15 : ENV SENTENCE_RANKER_SERVICE_URL ${SENTENCE_RANKER_SERVICE_URL}
 ---> Using cache
 ---> 4a3d5a539029
Step 11/15 : ARG N_SENTENCES_TO_RETURN
 ---> Using cache
 ---> 990675c30d62
Step 12/15 : ENV N_SENTENCES_TO_RETURN ${N_SENTENCES_TO_RETURN}
 ---> Using cache
 ---> c10f908f4ee6
Step 13/15 : ARG PROMPTS_TO_CONSIDER
 ---> Using cache
 ---> 4773adf0f8e6
Step 14/15 : ENV PROMPTS_TO_CONSIDER ${PROMPTS_TO_CONSIDER}
 ---> Using cache
 ---> 367908a68999
Step 15/15 : CMD gunicorn --workers=1 server:app --bind 0.0.0.0:8000
 ---> Using cache
 ---> 65e0129b2d70

[Warning] One or more build-args [SERVICE_NAME] were not consumed
Successfully built 65e0129b2d70
Successfully tagged gl_dream_prompt-selector:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [SRC_DIR COMMIT SERVICE_PORT SERVICE_NAME CONFIG] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_kbqa:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [SERVICE_PORT SERVICE_NAME CONFIG] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_text-qa:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [SERVICE_PORT SERVICE_NAME INTENT_RESPONSE_PHRASES_FNAME] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_dff-intent-responder-skill:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [CONFIG SERVICE_PORT SRC_DIR COMMIT] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_ner:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [SERVICE_PORT SERVICE_NAME CONFIG SRC_DIR] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_entity-linking:latest
Step 1/2 : FROM nginx:latest
 ---> a6bd71f48f68
Step 2/2 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 36a8e057a63f

[Warning] One or more build-args [CONFIG_WIKI CONFIG_WHOW SRC_DIR COMMIT N_FACTS SERVICE_PORT SERVICE_NAME CONFIG] were not consumed
Successfully built 36a8e057a63f
Successfully tagged gl_dream_fact-retrieval:latest
Step 1/27 : FROM python:3.9.16-slim
 ---> babdc67dc69c
Step 2/27 : WORKDIR /src
 ---> Using cache
 ---> 818116894af7
Step 3/27 : COPY common/dff/requirements.txt common-reqs.txt
 ---> Using cache
 ---> 1a67b83c5d6c
Step 4/27 : COPY skills/dff_template_prompted_skill/requirements.txt .
 ---> Using cache
 ---> 6f42488e49dd
Step 5/27 : RUN pip install --no-cache -r common-reqs.txt -r requirements.txt
 ---> Using cache
 ---> 0dd1a605ea86
Step 6/27 : RUN python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"
 ---> Using cache
 ---> 427f3e23e894
Step 7/27 : COPY skills/dff_template_prompted_skill/ ./
 ---> Using cache
 ---> 24e65db37ae6
Step 8/27 : COPY ./common/ ./common/
 ---> Using cache
 ---> 4bdebb796c7c
Step 9/27 : ARG SERVICE_NAME
 ---> Using cache
 ---> e4b09a53947e
Step 10/27 : ENV SERVICE_NAME ${SERVICE_NAME}
 ---> Using cache
 ---> caf94a3a5389
Step 11/27 : ARG SERVICE_PORT
 ---> Using cache
 ---> a08b7e365726
Step 12/27 : ENV SERVICE_PORT ${SERVICE_PORT}
 ---> Using cache
 ---> ea7a3806bf61
Step 13/27 : ARG PROMPT_FILE
 ---> Using cache
 ---> 91cc58b7e09a
Step 14/27 : ENV PROMPT_FILE ${PROMPT_FILE}
 ---> Using cache
 ---> 749df644a1dd
Step 15/27 : ARG GENERATIVE_SERVICE_URL
 ---> Using cache
 ---> 306e35c6edee
Step 16/27 : ENV GENERATIVE_SERVICE_URL ${GENERATIVE_SERVICE_URL}
 ---> Using cache
 ---> a1c7f7410c02
Step 17/27 : ARG GENERATIVE_TIMEOUT
 ---> Using cache
 ---> 951f8b75e743
Step 18/27 : ENV GENERATIVE_TIMEOUT ${GENERATIVE_TIMEOUT}
 ---> Using cache
 ---> 001b9fdcf777
Step 19/27 : ARG GENERATIVE_SERVICE_CONFIG
 ---> Using cache
 ---> 6992a58e45ee
Step 20/27 : ENV GENERATIVE_SERVICE_CONFIG ${GENERATIVE_SERVICE_CONFIG}
 ---> Using cache
 ---> 1f38cd163f20
Step 21/27 : ARG N_UTTERANCES_CONTEXT
 ---> Using cache
 ---> ced8855772ae
Step 22/27 : ENV N_UTTERANCES_CONTEXT ${N_UTTERANCES_CONTEXT}
 ---> Using cache
 ---> 78151b9473be
Step 23/27 : ARG ENVVARS_TO_SEND
 ---> Using cache
 ---> 338c5eeb5c01
Step 24/27 : ENV ENVVARS_TO_SEND ${ENVVARS_TO_SEND}
 ---> Using cache
 ---> d97da0a1f7b9
Step 25/27 : ARG ALLOW_PROMPT_RESET=0
 ---> Using cache
 ---> b7be75bf594a
Step 26/27 : ENV ALLOW_PROMPT_RESET ${ALLOW_PROMPT_RESET}
 ---> Using cache
 ---> c24952cf9818
Step 27/27 : CMD gunicorn --workers=1 server:app -b 0.0.0.0:${SERVICE_PORT} --reload --timeout ${GENERATIVE_TIMEOUT:-30}
 ---> Using cache
 ---> 715bb7c21eb5

Successfully built 715bb7c21eb5
Successfully tagged gl_dream_dff-dream-faq-prompted-skill:latest
Attaching to gl_dream_prompt-selector_1, gl_dream_dialogpt_1, gl_dream_dff-dream-faq-prompted-skill_1, gl_dream_dff-intent-responder-skill_1, gl_dream_property-extraction_1, gl_dream_ner_1, gl_dream_wiki-parser_1, gl_dream_factoid-qa_1, gl_dream_intent-catcher_1, gl_dream_entity-detection_1, gl_dream_entity-linking_1, gl_dream_text-qa_1, gl_dream_sentence-ranker_1, gl_dream_fact-retrieval_1, gl_dream_combined-classification_1, gl_dream_agent_1, gl_dream_summarization-annotator_1, gl_dream_dialog-summarizer_1, gl_dream_kbqa_1, gl_dream_openai-api-chatgpt_1, gl_dream_ranking-and-intent-based-response-selector_1, gl_dream_dff-dream-persona-chatgpt-prompted-skill_1, gl_dream_mongo_1, gl_dream_sentseg_1
[36mprompt-selector_1                             |[0m 2024-10-25 19:08:37,803 - server - INFO - prompt-selector considered ranker: http://sentence-ranker:8128/respond
[36mprompt-selector_1                             |[0m 2024-10-25 19:08:37,803 - server - INFO - prompt-selector considered prompts: ['dream_persona', 'dream_faq']
[32mdff-dream-faq-prompted-skill_1                |[0m [2024-10-25 19:08:37 +0000] [7] [INFO] Starting gunicorn 19.9.0
[33mdialogpt_1                                    |[0m  * Serving Flask app "server"
[33mdialogpt_1                                    |[0m  * Environment: production
[33mdialogpt_1                                    |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[33mdialogpt_1                                    |[0m    Use a production WSGI server instead.
[33mdialogpt_1                                    |[0m  * Debug mode: off
[36mprompt-selector_1                             |[0m  * Serving Flask app 'server'
[36mprompt-selector_1                             |[0m  * Debug mode: off
[32mdff-dream-faq-prompted-skill_1                |[0m [2024-10-25 19:08:37 +0000] [7] [INFO] Listening at: http://0.0.0.0:8170 (7)
[33mdialogpt_1                                    |[0m 2024-10-25 19:08:39,225 - root - INFO - PRETRAINED_MODEL_NAME_OR_PATH = microsoft/DialoGPT-medium
[35mdff-intent-responder-skill_1                  |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[35mdff-intent-responder-skill_1                  |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[32mdff-dream-faq-prompted-skill_1                |[0m [2024-10-25 19:08:37 +0000] [7] [INFO] Using worker: sync
[36mprompt-selector_1                             |[0m 2024-10-25 19:08:37,806 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
[36mprompt-selector_1                             |[0m  * Running on all addresses (0.0.0.0)
[36mprompt-selector_1                             |[0m  * Running on http://127.0.0.1:8135
[36mprompt-selector_1                             |[0m  * Running on http://172.23.0.2:8135
[31mproperty-extraction_1                         |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[31mproperty-extraction_1                         |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[34mner_1                                         |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[34mner_1                                         |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[34mner_1                                         |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[34mner_1                                         |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[34mner_1                                         |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[34mner_1                                         |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[34mner_1                                         |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[34mner_1                                         |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[34mner_1                                         |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[34mner_1                                         |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[34mner_1                                         |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[35mdff-intent-responder-skill_1                  |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[32mdff-dream-faq-prompted-skill_1                |[0m /usr/local/lib/python3.9/os.py:1023: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
[32mdff-dream-faq-prompted-skill_1                |[0m   return io.open(fd, *args, **kwargs)
[32mdff-dream-faq-prompted-skill_1                |[0m [2024-10-25 19:08:37 +0000] [8] [INFO] Booting worker with pid: 8
[36mprompt-selector_1                             |[0m 2024-10-25 19:08:37,807 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
[31mproperty-extraction_1                         |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[31mproperty-extraction_1                         |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[31mproperty-extraction_1                         |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[31mproperty-extraction_1                         |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[36;1mwiki-parser_1                                 |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[36;1mwiki-parser_1                                 |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[35mdff-intent-responder-skill_1                  |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[36;1mwiki-parser_1                                 |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[36;1mwiki-parser_1                                 |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[31mproperty-extraction_1                         |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[35mdff-intent-responder-skill_1                  |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,735 - common.prompts - INFO - Got ['OPENAI_API_KEY', 'OPENAI_ORGANIZATION', 'OPENAI_API_BASE']'s values from environment.
[31mproperty-extraction_1                         |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[33;1mfactoid-qa_1                                  |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[33;1mfactoid-qa_1                                  |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[31mproperty-extraction_1                         |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[36;1mwiki-parser_1                                 |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[31mproperty-extraction_1                         |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: using the "epoll" event method
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: nginx/1.25.3
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: OS: Linux 5.15.0-91-generic
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker processes
[33;1mfactoid-qa_1                                  |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[36;1mwiki-parser_1                                 |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[32;1mintent-catcher_1                              |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[32;1mintent-catcher_1                              |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[33;1mfactoid-qa_1                                  |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[33;1mfactoid-qa_1                                  |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[32;1mintent-catcher_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 35
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,736 - scenario.response - INFO - prompt: TASK: 
[32mdff-dream-faq-prompted-skill_1                |[0m You are a chatbot that can only answers FAQ questions about Dream.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m FAQ:
[32mdff-dream-faq-prompted-skill_1                |[0m In a few words, explain Dream architecture pls?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How is Dream licensed?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source software licensed under Apache 2.0 
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can I use Dream in my company/startup for commercial purposes?
[32mdff-dream-faq-prompted-skill_1                |[0m Yes.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Are you DeepPavlov or MIPT?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov was started at MIPT by a group of open-source believers who were very passionate about AI, especially Conversational AI in 2017. Now DeepPavlov is an open-source project containing DeepPavlov Library, DeepPavlov Agent, DeepPavlov Dream and DeepPavlov Dialog Flow Engine.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Do you work with Russian companies that are under sanctions?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov is an open-source project which products are released under Apache 2.0 license, so the products could be utilized by any company all over the world.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How can I use Dream for my enterprise/startup?
[32mdff-dream-faq-prompted-skill_1                |[0m You can use it to quickly build your own scalable AI assistant. You can pick any engine for its skills, you can tune its Skill and Response Selectors, you can tune its Annotators, and completely change the dialog strategy to adapt it to your specific needs.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m If I use Dream via proxy, how and where is my data stored?
[32mdff-dream-faq-prompted-skill_1                |[0m The dialogs with users are stored on your side because agent and database containers (mongo) are raised locally even using proxy. We utilize stateless paradigm, so we do not store inputs and outputs of other components.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Which Dream services are available via proxy?
[32mdff-dream-faq-prompted-skill_1                |[0m All the services used in the main Dream distribution
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What kind of load can the system handle?
[32mdff-dream-faq-prompted-skill_1                |[0m During the participation in Amazon Alexa Prize Socialbot Grand Challenges 3 and 4, the socialbot DREAM built using the DeepPavlov Dream tech, supported 7-10 RPS.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many people are there in Dream team?
[32mdff-dream-faq-prompted-skill_1                |[0m Several developers and researchers from DeepPavlov are mainly working on DeepPavlov Dream. We also constantly run internships for students.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can you provide examples of real applications where Dream has been used in production?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream was used twice as a socialbot that ran 24/7 for more than a half of year during team's participation in the Amazon Alexa Prize Socialbot Grand Challenges 3 & 4 in North America.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is the Architecture of the dialog systems?
[32mdff-dream-faq-prompted-skill_1                |[0m Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is an annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Annotators extract different features from user utterance (e.g., topics classification, entity extraction, KB connection).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a Skill Selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Skill Selector chooses a set of skill that will try to produce hypotheses for the current context.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a skill?
[32mdff-dream-faq-prompted-skill_1                |[0m Skills are components providing responses to the current context with help of Generative Services (e.g., GPT-J, GPT-3, ChatGPT).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a candidate annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Candidate Annotators extract useful for evaluation features from the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a response selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Response Selector chooses the final response among the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many skills can contain an Assistant?
[32mdff-dream-faq-prompted-skill_1                |[0m Multi-skill AI Assistants can contain multiple skills each of which is defined by the single prompt and selected LLM. Switching between available skills is implemented within a similarity-based approach. On each step multiple skills can be selected for generation. A final response among generated possible responses is selected via a ranking-based approach.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why might some response candidates be filtered out?
[32mdff-dream-faq-prompted-skill_1                |[0m Possible responses are filtered by a toxicity detector. In case of absence of non-toxic generated candidates, we provide default responses, so called fallbacks.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Is Dream just a witty API for ChatGPT? Can it work without ChatGPT and other LLMs?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a multi-skill platform for creating AI assistants, and while ChatGPT may be a part of it and use language models such as gpt-3.5-turbo to generate responses, Dream offers more customization and control over the behaviour of the assistant and the option to use different language models or even your own models.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What are the main advantages of DeepPavlov Dream?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source, multi-skill platform that offers flexibility in developing coplex dialog systems, allowing for customization and integration of different response generation methods and knowledge sources. It also provides simple integration with load-balancing tools and future support for text-based and multimodal experiences.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream vs RASA?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is a multi-skill AI assistant platform for building complex assistants with various response generation mechaisms, while RASA is a framework that focuses on ML and rule-based dialog control.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Dream vs LangChain?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a flexible multi-skill platform for developing AI assistants with various response generation engines, offering scalable deployment options. LangChain is a franework splecifically for LLM-based apps, requiring encapsulation within a deployment system for AWS or on-premises.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[33;1mfactoid-qa_1                                  |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[32;1mintent-catcher_1                              |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[35mdff-intent-responder-skill_1                  |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[35mdff-intent-responder-skill_1                  |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[35mdff-intent-responder-skill_1                  |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[32mdff-dream-faq-prompted-skill_1                |[0m Why is Dream not in PyPi and we can't install it via pip?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is not available on PyPi because it is a multi-skill platform for building AI assistants, which requires cloning the platform, selecting and customizing components, and deploying it, rather than installing it as a standalone library.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How does DeepPavlov Dream support multi-skill AI assistants?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream supports multi-skill AI assistants by enabling the incorporation of multiple skills with prompt-based definitions and language model selection. Skill switching can be done via similarity-based methods or language models, and the final response through ranking or language model assistance.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m INSTRUCTION:
[32mdff-dream-faq-prompted-skill_1                |[0m A human enters the conversation and starts asking questions. Generate the reply based on FAQ list.
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,736 - scenario.response - INFO - dialog_context: []
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 36
[34;1mtext-qa_1                                     |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[34;1mtext-qa_1                                     |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[33;1mfactoid-qa_1                                  |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[32;1mintent-catcher_1                              |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[35mdff-intent-responder-skill_1                  |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[34;1mtext-qa_1                                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[31;1mentity-linking_1                              |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[31;1mentity-linking_1                              |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,736 - scenario.response - INFO - generated hypotheses: []
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,745 - common.prompts - INFO - Exception in `/generate_goals` endpoint:
[32mdff-dream-faq-prompted-skill_1                |[0m HTTPConnectionPool(host='openai-api-chatgpt', port=8145): Max retries exceeded with url: /generate_goals (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f82ff1abb80>: Failed to establish a new connection: [Errno 111] Connection refused'))
[35mdff-intent-responder-skill_1                  |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,746 - scenario.response - INFO - Generated goals for prompt using generative service:
[32mdff-dream-faq-prompted-skill_1                |[0m TASK: 
[32mdff-dream-faq-prompted-skill_1                |[0m You are a chatbot that can only answers FAQ questions about Dream.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m FAQ:
[32mdff-dream-faq-prompted-skill_1                |[0m In a few words, explain Dream architecture pls?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How is Dream licensed?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source software licensed under Apache 2.0 
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can I use Dream in my company/startup for commercial purposes?
[32mdff-dream-faq-prompted-skill_1                |[0m Yes.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Are you DeepPavlov or MIPT?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov was started at MIPT by a group of open-source believers who were very passionate about AI, especially Conversational AI in 2017. Now DeepPavlov is an open-source project containing DeepPavlov Library, DeepPavlov Agent, DeepPavlov Dream and DeepPavlov Dialog Flow Engine.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Do you work with Russian companies that are under sanctions?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov is an open-source project which products are released under Apache 2.0 license, so the products could be utilized by any company all over the world.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How can I use Dream for my enterprise/startup?
[32mdff-dream-faq-prompted-skill_1                |[0m You can use it to quickly build your own scalable AI assistant. You can pick any engine for its skills, you can tune its Skill and Response Selectors, you can tune its Annotators, and completely change the dialog strategy to adapt it to your specific needs.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m If I use Dream via proxy, how and where is my data stored?
[32mdff-dream-faq-prompted-skill_1                |[0m The dialogs with users are stored on your side because agent and database containers (mongo) are raised locally even using proxy. We utilize stateless paradigm, so we do not store inputs and outputs of other components.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Which Dream services are available via proxy?
[32mdff-dream-faq-prompted-skill_1                |[0m All the services used in the main Dream distribution
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What kind of load can the system handle?
[32mdff-dream-faq-prompted-skill_1                |[0m During the participation in Amazon Alexa Prize Socialbot Grand Challenges 3 and 4, the socialbot DREAM built using the DeepPavlov Dream tech, supported 7-10 RPS.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many people are there in Dream team?
[32mdff-dream-faq-prompted-skill_1                |[0m Several developers and researchers from DeepPavlov are mainly working on DeepPavlov Dream. We also constantly run internships for students.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can you provide examples of real applications where Dream has been used in production?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream was used twice as a socialbot that ran 24/7 for more than a half of year during team's participation in the Amazon Alexa Prize Socialbot Grand Challenges 3 & 4 in North America.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is the Architecture of the dialog systems?
[32mdff-dream-faq-prompted-skill_1                |[0m Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is an annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Annotators extract different features from user utterance (e.g., topics classification, entity extraction, KB connection).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a Skill Selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Skill Selector chooses a set of skill that will try to produce hypotheses for the current context.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a skill?
[32mdff-dream-faq-prompted-skill_1                |[0m Skills are components providing responses to the current context with help of Generative Services (e.g., GPT-J, GPT-3, ChatGPT).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a candidate annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Candidate Annotators extract useful for evaluation features from the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a response selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Response Selector chooses the final response among the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many skills can contain an Assistant?
[32mdff-dream-faq-prompted-skill_1                |[0m Multi-skill AI Assistants can contain multiple skills each of which is defined by the single prompt and selected LLM. Switching between available skills is implemented within a similarity-based approach. On each step multiple skills can be selected for generation. A final response among generated possible responses is selected via a ranking-based approach.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why might some response candidates be filtered out?
[32mdff-dream-faq-prompted-skill_1                |[0m Possible responses are filtered by a toxicity detector. In case of absence of non-toxic generated candidates, we provide default responses, so called fallbacks.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Is Dream just a witty API for ChatGPT? Can it work without ChatGPT and other LLMs?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a multi-skill platform for creating AI assistants, and while ChatGPT may be a part of it and use language models such as gpt-3.5-turbo to generate responses, Dream offers more customization and control over the behaviour of the assistant and the option to use different language models or even your own models.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What are the main advantages of DeepPavlov Dream?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source, multi-skill platform that offers flexibility in developing coplex dialog systems, allowing for customization and integration of different response generation methods and knowledge sources. It also provides simple integration with load-balancing tools and future support for text-based and multimodal experiences.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream vs RASA?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is a multi-skill AI assistant platform for building complex assistants with various response generation mechaisms, while RASA is a framework that focuses on ML and rule-based dialog control.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Dream vs LangChain?
[36;1mwiki-parser_1                                 |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[35;1mentity-detection_1                            |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[35;1mentity-detection_1                            |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[31;1mentity-linking_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[32;1mintent-catcher_1                              |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 37
[35;1mentity-detection_1                            |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[32;1mintent-catcher_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[34;1mtext-qa_1                                     |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a flexible multi-skill platform for developing AI assistants with various response generation engines, offering scalable deployment options. LangChain is a franework splecifically for LLM-based apps, requiring encapsulation within a deployment system for AWS or on-premises.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why is Dream not in PyPi and we can't install it via pip?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is not available on PyPi because it is a multi-skill platform for building AI assistants, which requires cloning the platform, selecting and customizing components, and deploying it, rather than installing it as a standalone library.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How does DeepPavlov Dream support multi-skill AI assistants?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream supports multi-skill AI assistants by enabling the incorporation of multiple skills with prompt-based definitions and language model selection. Skill switching can be done via similarity-based methods or language models, and the final response through ranking or language model assistance.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m INSTRUCTION:
[32mdff-dream-faq-prompted-skill_1                |[0m A human enters the conversation and starts asking questions. Generate the reply based on FAQ list.
[33;1mfactoid-qa_1                                  |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[33;1mfactoid-qa_1                                  |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 38
[31;1mentity-linking_1                              |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[32;1mintent-catcher_1                              |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[32;1mintent-catcher_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[36;1mwiki-parser_1                                 |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[33;1mfactoid-qa_1                                  |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[35;1mentity-detection_1                            |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[35;1mentity-detection_1                            |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: using the "epoll" event method
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: nginx/1.25.3
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: OS: Linux 5.15.0-91-generic
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[31;1mentity-linking_1                              |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[36;1mwiki-parser_1                                 |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[34;1mtext-qa_1                                     |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[32;1mintent-catcher_1                              |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker processes
[31;1mentity-linking_1                              |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 39
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 40
[36;1mwiki-parser_1                                 |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[31;1mentity-linking_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[34;1mtext-qa_1                                     |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[31;1mentity-linking_1                              |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[34;1mtext-qa_1                                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[36msentence-ranker_1                             |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[36msentence-ranker_1                             |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[31;1mentity-linking_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[35;1mentity-detection_1                            |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[35;1mentity-detection_1                            |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[31;1mentity-linking_1                              |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[36msentence-ranker_1                             |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[36msentence-ranker_1                             |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[35;1mentity-detection_1                            |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 35
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 36
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 41
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 42
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 43
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[36msentence-ranker_1                             |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[32mcombined-classification_1                     |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[32mcombined-classification_1                     |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[33mfact-retrieval_1                              |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[33mfact-retrieval_1                              |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[33mfact-retrieval_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[34;1mtext-qa_1                                     |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[35;1mentity-detection_1                            |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[36msentence-ranker_1                             |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[34;1mtext-qa_1                                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,746 - common.prompts - INFO - Got ['OPENAI_API_KEY', 'OPENAI_ORGANIZATION', 'OPENAI_API_BASE']'s values from environment.
[36msentence-ranker_1                             |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[35;1mentity-detection_1                            |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,746 - scenario.response - INFO - prompt: TASK: 
[32mdff-dream-faq-prompted-skill_1                |[0m You are a chatbot that can only answers FAQ questions about Dream.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m FAQ:
[32mdff-dream-faq-prompted-skill_1                |[0m In a few words, explain Dream architecture pls?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How is Dream licensed?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source software licensed under Apache 2.0 
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can I use Dream in my company/startup for commercial purposes?
[32mdff-dream-faq-prompted-skill_1                |[0m Yes.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Are you DeepPavlov or MIPT?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov was started at MIPT by a group of open-source believers who were very passionate about AI, especially Conversational AI in 2017. Now DeepPavlov is an open-source project containing DeepPavlov Library, DeepPavlov Agent, DeepPavlov Dream and DeepPavlov Dialog Flow Engine.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Do you work with Russian companies that are under sanctions?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov is an open-source project which products are released under Apache 2.0 license, so the products could be utilized by any company all over the world.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How can I use Dream for my enterprise/startup?
[32mdff-dream-faq-prompted-skill_1                |[0m You can use it to quickly build your own scalable AI assistant. You can pick any engine for its skills, you can tune its Skill and Response Selectors, you can tune its Annotators, and completely change the dialog strategy to adapt it to your specific needs.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m If I use Dream via proxy, how and where is my data stored?
[32mdff-dream-faq-prompted-skill_1                |[0m The dialogs with users are stored on your side because agent and database containers (mongo) are raised locally even using proxy. We utilize stateless paradigm, so we do not store inputs and outputs of other components.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Which Dream services are available via proxy?
[32mdff-dream-faq-prompted-skill_1                |[0m All the services used in the main Dream distribution
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What kind of load can the system handle?
[32mdff-dream-faq-prompted-skill_1                |[0m During the participation in Amazon Alexa Prize Socialbot Grand Challenges 3 and 4, the socialbot DREAM built using the DeepPavlov Dream tech, supported 7-10 RPS.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many people are there in Dream team?
[32mdff-dream-faq-prompted-skill_1                |[0m Several developers and researchers from DeepPavlov are mainly working on DeepPavlov Dream. We also constantly run internships for students.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can you provide examples of real applications where Dream has been used in production?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream was used twice as a socialbot that ran 24/7 for more than a half of year during team's participation in the Amazon Alexa Prize Socialbot Grand Challenges 3 & 4 in North America.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is the Architecture of the dialog systems?
[32mdff-dream-faq-prompted-skill_1                |[0m Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is an annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Annotators extract different features from user utterance (e.g., topics classification, entity extraction, KB connection).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a Skill Selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Skill Selector chooses a set of skill that will try to produce hypotheses for the current context.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a skill?
[32mdff-dream-faq-prompted-skill_1                |[0m Skills are components providing responses to the current context with help of Generative Services (e.g., GPT-J, GPT-3, ChatGPT).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a candidate annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Candidate Annotators extract useful for evaluation features from the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a response selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Response Selector chooses the final response among the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many skills can contain an Assistant?
[32mdff-dream-faq-prompted-skill_1                |[0m Multi-skill AI Assistants can contain multiple skills each of which is defined by the single prompt and selected LLM. Switching between available skills is implemented within a similarity-based approach. On each step multiple skills can be selected for generation. A final response among generated possible responses is selected via a ranking-based approach.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why might some response candidates be filtered out?
[32mdff-dream-faq-prompted-skill_1                |[0m Possible responses are filtered by a toxicity detector. In case of absence of non-toxic generated candidates, we provide default responses, so called fallbacks.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Is Dream just a witty API for ChatGPT? Can it work without ChatGPT and other LLMs?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a multi-skill platform for creating AI assistants, and while ChatGPT may be a part of it and use language models such as gpt-3.5-turbo to generate responses, Dream offers more customization and control over the behaviour of the assistant and the option to use different language models or even your own models.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What are the main advantages of DeepPavlov Dream?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source, multi-skill platform that offers flexibility in developing coplex dialog systems, allowing for customization and integration of different response generation methods and knowledge sources. It also provides simple integration with load-balancing tools and future support for text-based and multimodal experiences.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream vs RASA?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is a multi-skill AI assistant platform for building complex assistants with various response generation mechaisms, while RASA is a framework that focuses on ML and rule-based dialog control.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Dream vs LangChain?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a flexible multi-skill platform for developing AI assistants with various response generation engines, offering scalable deployment options. LangChain is a franework splecifically for LLM-based apps, requiring encapsulation within a deployment system for AWS or on-premises.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why is Dream not in PyPi and we can't install it via pip?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is not available on PyPi because it is a multi-skill platform for building AI assistants, which requires cloning the platform, selecting and customizing components, and deploying it, rather than installing it as a standalone library.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How does DeepPavlov Dream support multi-skill AI assistants?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream supports multi-skill AI assistants by enabling the incorporation of multiple skills with prompt-based definitions and language model selection. Skill switching can be done via similarity-based methods or language models, and the final response through ranking or language model assistance.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m INSTRUCTION:
[32mdff-dream-faq-prompted-skill_1                |[0m A human enters the conversation and starts asking questions. Generate the reply based on FAQ list.
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,746 - scenario.response - INFO - dialog_context: []
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[36msentence-ranker_1                             |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 37
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,747 - scenario.response - INFO - generated hypotheses: []
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 38
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 44
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,750 - common.prompts - INFO - Exception in `/generate_goals` endpoint:
[32mdff-dream-faq-prompted-skill_1                |[0m HTTPConnectionPool(host='openai-api-chatgpt', port=8145): Max retries exceeded with url: /generate_goals (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f82ff1d9430>: Failed to establish a new connection: [Errno 111] Connection refused'))
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 39
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 40
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 45
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[32mcombined-classification_1                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 46
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m docker-compose-wait - starting with configuration:
[35magent_1                                       |[0m  - Hosts to be waiting for: [sentseg:8011, ranking-and-intent-based-response-selector:8081, dff-intent-responder-skill:8012, intent-catcher:8014, ner:8021, factoid-qa:8071, kbqa:8072, entity-linking:8075, wiki-parser:8077, text-qa:8078, combined-classification:8087, fact-retrieval:8100, entity-detection:8103, dialogpt:8125, sentence-ranker:8128, property-extraction:8136, prompt-selector:8135, openai-api-chatgpt:8145, dff-dream-faq-prompted-skill:8170, dff-dream-persona-chatgpt-prompted-skill:8137, summarization-annotator:8058, dialog-summarizer:8059]
[35magent_1                                       |[0m  - Timeout before failure: 1000 seconds 
[35magent_1                                       |[0m  - Sleeping time before checking for hosts availability: 0 seconds
[35magent_1                                       |[0m  - Sleeping time once all hosts are available: 0 seconds
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of sentseg:8011
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,750 - scenario.response - INFO - Generated goals for prompt using generative service:
[32mdff-dream-faq-prompted-skill_1                |[0m TASK: 
[32mdff-dream-faq-prompted-skill_1                |[0m You are a chatbot that can only answers FAQ questions about Dream.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m FAQ:
[32mdff-dream-faq-prompted-skill_1                |[0m In a few words, explain Dream architecture pls?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How is Dream licensed?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source software licensed under Apache 2.0 
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can I use Dream in my company/startup for commercial purposes?
[32mdff-dream-faq-prompted-skill_1                |[0m Yes.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Are you DeepPavlov or MIPT?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov was started at MIPT by a group of open-source believers who were very passionate about AI, especially Conversational AI in 2017. Now DeepPavlov is an open-source project containing DeepPavlov Library, DeepPavlov Agent, DeepPavlov Dream and DeepPavlov Dialog Flow Engine.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Do you work with Russian companies that are under sanctions?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov is an open-source project which products are released under Apache 2.0 license, so the products could be utilized by any company all over the world.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How can I use Dream for my enterprise/startup?
[32mdff-dream-faq-prompted-skill_1                |[0m You can use it to quickly build your own scalable AI assistant. You can pick any engine for its skills, you can tune its Skill and Response Selectors, you can tune its Annotators, and completely change the dialog strategy to adapt it to your specific needs.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m If I use Dream via proxy, how and where is my data stored?
[32mdff-dream-faq-prompted-skill_1                |[0m The dialogs with users are stored on your side because agent and database containers (mongo) are raised locally even using proxy. We utilize stateless paradigm, so we do not store inputs and outputs of other components.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Which Dream services are available via proxy?
[32mdff-dream-faq-prompted-skill_1                |[0m All the services used in the main Dream distribution
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What kind of load can the system handle?
[32mdff-dream-faq-prompted-skill_1                |[0m During the participation in Amazon Alexa Prize Socialbot Grand Challenges 3 and 4, the socialbot DREAM built using the DeepPavlov Dream tech, supported 7-10 RPS.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many people are there in Dream team?
[32mdff-dream-faq-prompted-skill_1                |[0m Several developers and researchers from DeepPavlov are mainly working on DeepPavlov Dream. We also constantly run internships for students.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can you provide examples of real applications where Dream has been used in production?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream was used twice as a socialbot that ran 24/7 for more than a half of year during team's participation in the Amazon Alexa Prize Socialbot Grand Challenges 3 & 4 in North America.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is the Architecture of the dialog systems?
[32mdff-dream-faq-prompted-skill_1                |[0m Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is an annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Annotators extract different features from user utterance (e.g., topics classification, entity extraction, KB connection).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a Skill Selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Skill Selector chooses a set of skill that will try to produce hypotheses for the current context.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a skill?
[32mdff-dream-faq-prompted-skill_1                |[0m Skills are components providing responses to the current context with help of Generative Services (e.g., GPT-J, GPT-3, ChatGPT).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a candidate annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Candidate Annotators extract useful for evaluation features from the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a response selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Response Selector chooses the final response among the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many skills can contain an Assistant?
[32mdff-dream-faq-prompted-skill_1                |[0m Multi-skill AI Assistants can contain multiple skills each of which is defined by the single prompt and selected LLM. Switching between available skills is implemented within a similarity-based approach. On each step multiple skills can be selected for generation. A final response among generated possible responses is selected via a ranking-based approach.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why might some response candidates be filtered out?
[32mdff-dream-faq-prompted-skill_1                |[0m Possible responses are filtered by a toxicity detector. In case of absence of non-toxic generated candidates, we provide default responses, so called fallbacks.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Is Dream just a witty API for ChatGPT? Can it work without ChatGPT and other LLMs?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a multi-skill platform for creating AI assistants, and while ChatGPT may be a part of it and use language models such as gpt-3.5-turbo to generate responses, Dream offers more customization and control over the behaviour of the assistant and the option to use different language models or even your own models.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What are the main advantages of DeepPavlov Dream?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source, multi-skill platform that offers flexibility in developing coplex dialog systems, allowing for customization and integration of different response generation methods and knowledge sources. It also provides simple integration with load-balancing tools and future support for text-based and multimodal experiences.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream vs RASA?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is a multi-skill AI assistant platform for building complex assistants with various response generation mechaisms, while RASA is a framework that focuses on ML and rule-based dialog control.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Dream vs LangChain?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a flexible multi-skill platform for developing AI assistants with various response generation engines, offering scalable deployment options. LangChain is a franework splecifically for LLM-based apps, requiring encapsulation within a deployment system for AWS or on-premises.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why is Dream not in PyPi and we can't install it via pip?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is not available on PyPi because it is a multi-skill platform for building AI assistants, which requires cloning the platform, selecting and customizing components, and deploying it, rather than installing it as a standalone library.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How does DeepPavlov Dream support multi-skill AI assistants?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream supports multi-skill AI assistants by enabling the incorporation of multiple skills with prompt-based definitions and language model selection. Skill switching can be done via similarity-based methods or language models, and the final response through ranking or language model assistance.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m INSTRUCTION:
[32mdff-dream-faq-prompted-skill_1                |[0m A human enters the conversation and starts asking questions. Generate the reply based on FAQ list.
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,750 - common.prompts - INFO - Got ['OPENAI_API_KEY', 'OPENAI_ORGANIZATION', 'OPENAI_API_BASE']'s values from environment.
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 47
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,750 - scenario.response - INFO - prompt: TASK: 
[32mdff-dream-faq-prompted-skill_1                |[0m You are a chatbot that can only answers FAQ questions about Dream.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m FAQ:
[32mdff-dream-faq-prompted-skill_1                |[0m In a few words, explain Dream architecture pls?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How is Dream licensed?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source software licensed under Apache 2.0 
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can I use Dream in my company/startup for commercial purposes?
[32mdff-dream-faq-prompted-skill_1                |[0m Yes.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Are you DeepPavlov or MIPT?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov was started at MIPT by a group of open-source believers who were very passionate about AI, especially Conversational AI in 2017. Now DeepPavlov is an open-source project containing DeepPavlov Library, DeepPavlov Agent, DeepPavlov Dream and DeepPavlov Dialog Flow Engine.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Do you work with Russian companies that are under sanctions?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov is an open-source project which products are released under Apache 2.0 license, so the products could be utilized by any company all over the world.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How can I use Dream for my enterprise/startup?
[32mdff-dream-faq-prompted-skill_1                |[0m You can use it to quickly build your own scalable AI assistant. You can pick any engine for its skills, you can tune its Skill and Response Selectors, you can tune its Annotators, and completely change the dialog strategy to adapt it to your specific needs.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m If I use Dream via proxy, how and where is my data stored?
[32mdff-dream-faq-prompted-skill_1                |[0m The dialogs with users are stored on your side because agent and database containers (mongo) are raised locally even using proxy. We utilize stateless paradigm, so we do not store inputs and outputs of other components.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Which Dream services are available via proxy?
[32mdff-dream-faq-prompted-skill_1                |[0m All the services used in the main Dream distribution
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What kind of load can the system handle?
[32mdff-dream-faq-prompted-skill_1                |[0m During the participation in Amazon Alexa Prize Socialbot Grand Challenges 3 and 4, the socialbot DREAM built using the DeepPavlov Dream tech, supported 7-10 RPS.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many people are there in Dream team?
[32mdff-dream-faq-prompted-skill_1                |[0m Several developers and researchers from DeepPavlov are mainly working on DeepPavlov Dream. We also constantly run internships for students.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can you provide examples of real applications where Dream has been used in production?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream was used twice as a socialbot that ran 24/7 for more than a half of year during team's participation in the Amazon Alexa Prize Socialbot Grand Challenges 3 & 4 in North America.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is the Architecture of the dialog systems?
[32mdff-dream-faq-prompted-skill_1                |[0m Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is an annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Annotators extract different features from user utterance (e.g., topics classification, entity extraction, KB connection).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a Skill Selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Skill Selector chooses a set of skill that will try to produce hypotheses for the current context.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a skill?
[32mdff-dream-faq-prompted-skill_1                |[0m Skills are components providing responses to the current context with help of Generative Services (e.g., GPT-J, GPT-3, ChatGPT).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a candidate annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Candidate Annotators extract useful for evaluation features from the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a response selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Response Selector chooses the final response among the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many skills can contain an Assistant?
[32mdff-dream-faq-prompted-skill_1                |[0m Multi-skill AI Assistants can contain multiple skills each of which is defined by the single prompt and selected LLM. Switching between available skills is implemented within a similarity-based approach. On each step multiple skills can be selected for generation. A final response among generated possible responses is selected via a ranking-based approach.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why might some response candidates be filtered out?
[32mdff-dream-faq-prompted-skill_1                |[0m Possible responses are filtered by a toxicity detector. In case of absence of non-toxic generated candidates, we provide default responses, so called fallbacks.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Is Dream just a witty API for ChatGPT? Can it work without ChatGPT and other LLMs?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a multi-skill platform for creating AI assistants, and while ChatGPT may be a part of it and use language models such as gpt-3.5-turbo to generate responses, Dream offers more customization and control over the behaviour of the assistant and the option to use different language models or even your own models.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What are the main advantages of DeepPavlov Dream?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source, multi-skill platform that offers flexibility in developing coplex dialog systems, allowing for customization and integration of different response generation methods and knowledge sources. It also provides simple integration with load-balancing tools and future support for text-based and multimodal experiences.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream vs RASA?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is a multi-skill AI assistant platform for building complex assistants with various response generation mechaisms, while RASA is a framework that focuses on ML and rule-based dialog control.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Dream vs LangChain?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a flexible multi-skill platform for developing AI assistants with various response generation engines, offering scalable deployment options. LangChain is a franework splecifically for LLM-based apps, requiring encapsulation within a deployment system for AWS or on-premises.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why is Dream not in PyPi and we can't install it via pip?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is not available on PyPi because it is a multi-skill platform for building AI assistants, which requires cloning the platform, selecting and customizing components, and deploying it, rather than installing it as a standalone library.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How does DeepPavlov Dream support multi-skill AI assistants?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream supports multi-skill AI assistants by enabling the incorporation of multiple skills with prompt-based definitions and language model selection. Skill switching can be done via similarity-based methods or language models, and the final response through ranking or language model assistance.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m INSTRUCTION:
[32mdff-dream-faq-prompted-skill_1                |[0m A human enters the conversation and starts asking questions. Generate the reply based on FAQ list.
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,750 - scenario.response - INFO - dialog_context: []
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,750 - scenario.response - INFO - generated hypotheses: []
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 41
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,754 - common.prompts - INFO - Exception in `/generate_goals` endpoint:
[32mdff-dream-faq-prompted-skill_1                |[0m HTTPConnectionPool(host='openai-api-chatgpt', port=8145): Max retries exceeded with url: /generate_goals (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f82ff1d9e50>: Failed to establish a new connection: [Errno 111] Connection refused'))
[34;1mtext-qa_1                                     |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 42
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:38,754 - scenario.response - INFO - Generated goals for prompt using generative service:
[32mdff-dream-faq-prompted-skill_1                |[0m TASK: 
[32mdff-dream-faq-prompted-skill_1                |[0m You are a chatbot that can only answers FAQ questions about Dream.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m FAQ:
[32mdff-dream-faq-prompted-skill_1                |[0m In a few words, explain Dream architecture pls?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How is Dream licensed?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source software licensed under Apache 2.0 
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can I use Dream in my company/startup for commercial purposes?
[32mdff-dream-faq-prompted-skill_1                |[0m Yes.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Are you DeepPavlov or MIPT?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov was started at MIPT by a group of open-source believers who were very passionate about AI, especially Conversational AI in 2017. Now DeepPavlov is an open-source project containing DeepPavlov Library, DeepPavlov Agent, DeepPavlov Dream and DeepPavlov Dialog Flow Engine.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Do you work with Russian companies that are under sanctions?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov is an open-source project which products are released under Apache 2.0 license, so the products could be utilized by any company all over the world.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How can I use Dream for my enterprise/startup?
[32mdff-dream-faq-prompted-skill_1                |[0m You can use it to quickly build your own scalable AI assistant. You can pick any engine for its skills, you can tune its Skill and Response Selectors, you can tune its Annotators, and completely change the dialog strategy to adapt it to your specific needs.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m If I use Dream via proxy, how and where is my data stored?
[32mdff-dream-faq-prompted-skill_1                |[0m The dialogs with users are stored on your side because agent and database containers (mongo) are raised locally even using proxy. We utilize stateless paradigm, so we do not store inputs and outputs of other components.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Which Dream services are available via proxy?
[32mdff-dream-faq-prompted-skill_1                |[0m All the services used in the main Dream distribution
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What kind of load can the system handle?
[32mdff-dream-faq-prompted-skill_1                |[0m During the participation in Amazon Alexa Prize Socialbot Grand Challenges 3 and 4, the socialbot DREAM built using the DeepPavlov Dream tech, supported 7-10 RPS.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many people are there in Dream team?
[32mdff-dream-faq-prompted-skill_1                |[0m Several developers and researchers from DeepPavlov are mainly working on DeepPavlov Dream. We also constantly run internships for students.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can you provide examples of real applications where Dream has been used in production?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream was used twice as a socialbot that ran 24/7 for more than a half of year during team's participation in the Amazon Alexa Prize Socialbot Grand Challenges 3 & 4 in North America.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is the Architecture of the dialog systems?
[32mdff-dream-faq-prompted-skill_1                |[0m Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is an annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Annotators extract different features from user utterance (e.g., topics classification, entity extraction, KB connection).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a Skill Selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Skill Selector chooses a set of skill that will try to produce hypotheses for the current context.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a skill?
[32mdff-dream-faq-prompted-skill_1                |[0m Skills are components providing responses to the current context with help of Generative Services (e.g., GPT-J, GPT-3, ChatGPT).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a candidate annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Candidate Annotators extract useful for evaluation features from the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a response selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Response Selector chooses the final response among the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many skills can contain an Assistant?
[32mdff-dream-faq-prompted-skill_1                |[0m Multi-skill AI Assistants can contain multiple skills each of which is defined by the single prompt and selected LLM. Switching between available skills is implemented within a similarity-based approach. On each step multiple skills can be selected for generation. A final response among generated possible responses is selected via a ranking-based approach.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why might some response candidates be filtered out?
[32mdff-dream-faq-prompted-skill_1                |[0m Possible responses are filtered by a toxicity detector. In case of absence of non-toxic generated candidates, we provide default responses, so called fallbacks.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Is Dream just a witty API for ChatGPT? Can it work without ChatGPT and other LLMs?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a multi-skill platform for creating AI assistants, and while ChatGPT may be a part of it and use language models such as gpt-3.5-turbo to generate responses, Dream offers more customization and control over the behaviour of the assistant and the option to use different language models or even your own models.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What are the main advantages of DeepPavlov Dream?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source, multi-skill platform that offers flexibility in developing coplex dialog systems, allowing for customization and integration of different response generation methods and knowledge sources. It also provides simple integration with load-balancing tools and future support for text-based and multimodal experiences.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream vs RASA?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is a multi-skill AI assistant platform for building complex assistants with various response generation mechaisms, while RASA is a framework that focuses on ML and rule-based dialog control.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Dream vs LangChain?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a flexible multi-skill platform for developing AI assistants with various response generation engines, offering scalable deployment options. LangChain is a franework splecifically for LLM-based apps, requiring encapsulation within a deployment system for AWS or on-premises.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why is Dream not in PyPi and we can't install it via pip?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is not available on PyPi because it is a multi-skill platform for building AI assistants, which requires cloning the platform, selecting and customizing components, and deploying it, rather than installing it as a standalone library.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How does DeepPavlov Dream support multi-skill AI assistants?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream supports multi-skill AI assistants by enabling the incorporation of multiple skills with prompt-based definitions and language model selection. Skill switching can be done via similarity-based methods or language models, and the final response through ranking or language model assistance.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m INSTRUCTION:
[32mdff-dream-faq-prompted-skill_1                |[0m A human enters the conversation and starts asking questions. Generate the reply based on FAQ list.
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 48
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 49
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 50
[35magent_1                                       |[0m Host sentseg:8011 not yet available...
[33mfact-retrieval_1                              |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 43
[33mfact-retrieval_1                              |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 51
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 44
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 52
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[36msentence-ranker_1                             |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[31msummarization-annotator_1                     |[0m  * Serving Flask app "server"
[31msummarization-annotator_1                     |[0m  * Environment: production
[31msummarization-annotator_1                     |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[31msummarization-annotator_1                     |[0m    Use a production WSGI server instead.
[31msummarization-annotator_1                     |[0m  * Debug mode: off
[31msummarization-annotator_1                     |[0m /usr/local/lib/python3.7/site-packages/requests/__init__.py:91: RequestsDependencyWarning: urllib3 (2.0.7) or chardet (3.0.4) doesn't match a supported version!
[31msummarization-annotator_1                     |[0m   RequestsDependencyWarning)
[31msummarization-annotator_1                     |[0m 2024-10-25 19:08:39,667 - server - INFO - summarization-annotator considered summarizer: http://dialog-summarizer:8059/respond_batch
[32mcombined-classification_1                     |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[36msentence-ranker_1                             |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[33mfact-retrieval_1                              |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[33mfact-retrieval_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[33mfact-retrieval_1                              |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[31msummarization-annotator_1                     |[0m 2024-10-25 19:08:39,670 - werkzeug - WARNING -  * Running on all addresses.
[31msummarization-annotator_1                     |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[32mcombined-classification_1                     |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[32mcombined-classification_1                     |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[32mcombined-classification_1                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[33mfact-retrieval_1                              |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 45
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 46
[36;1mkbqa_1                                        |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[36;1mkbqa_1                                        |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[31msummarization-annotator_1                     |[0m 2024-10-25 19:08:39,671 - werkzeug - INFO -  * Running on http://172.23.0.19:8058/ (Press CTRL+C to quit)
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 53
[34mdialog-summarizer_1                           |[0m  * Serving Flask app "server"
[34mdialog-summarizer_1                           |[0m  * Environment: production
[34mdialog-summarizer_1                           |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[34mdialog-summarizer_1                           |[0m    Use a production WSGI server instead.
[34mdialog-summarizer_1                           |[0m  * Debug mode: off
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 47
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 48
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 49
[32mcombined-classification_1                     |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 54
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 55
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[33mfact-retrieval_1                              |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 50
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 56
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[32mcombined-classification_1                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[33;1mopenai-api-chatgpt_1                          |[0m  * Serving Flask app "server"
[33;1mopenai-api-chatgpt_1                          |[0m  * Environment: production
[33;1mopenai-api-chatgpt_1                          |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[33;1mopenai-api-chatgpt_1                          |[0m    Use a production WSGI server instead.
[33;1mopenai-api-chatgpt_1                          |[0m  * Debug mode: off
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 57
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 58
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[32mcombined-classification_1                     |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: using the "epoll" event method
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: nginx/1.25.3
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: OS: Linux 5.15.0-91-generic
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[36;1mkbqa_1                                        |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[36;1mkbqa_1                                        |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[36;1mkbqa_1                                        |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 59
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker processes
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 51
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 52
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 35
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 60
[36;1mkbqa_1                                        |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 36
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 37
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[36;1mkbqa_1                                        |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 38
[36;1mkbqa_1                                        |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.955+0000 I CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 39
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.961+0000 I CONTROL  [initandlisten] MongoDB starting : pid=1 port=27017 dbpath=/data/db 64-bit host=a8287138d84d
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.961+0000 I CONTROL  [initandlisten] db version v4.0.0
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.961+0000 I CONTROL  [initandlisten] git version: 3b07af3d4f471ae89e8186d33bbb1d5259597d51
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.961+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.961+0000 I CONTROL  [initandlisten] allocator: tcmalloc
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.961+0000 I CONTROL  [initandlisten] modules: none
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.961+0000 I CONTROL  [initandlisten] build environment:
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.961+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 53
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 54
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.962+0000 I CONTROL  [initandlisten]     distarch: x86_64
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.962+0000 I CONTROL  [initandlisten]     target_arch: x86_64
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.962+0000 I CONTROL  [initandlisten] options: { net: { bindIpAll: true } }
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[36;1mkbqa_1                                        |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 40
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 55
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 56
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.962+0000 I STORAGE  [initandlisten] 
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.962+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 61
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.962+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 41
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:39.962+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=128393M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 57
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 62
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[34;1msentseg_1                                     |[0m /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
[34;1msentseg_1                                     |[0m /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 42
[34;1msentseg_1                                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
[36;1mkbqa_1                                        |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 63
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: using the "epoll" event method
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: nginx/1.25.3
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: OS: Linux 5.15.0-91-generic
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[34;1msentseg_1                                     |[0m 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker processes
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 35
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 36
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[34;1msentseg_1                                     |[0m 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[34;1msentseg_1                                     |[0m /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 43
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 37
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 38
[35magent_1                                       |[0m Host sentseg:8011 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  ranking-and-intent-based-response-selector:8081
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[34;1msentseg_1                                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[35magent_1                                       |[0m Host  ranking-and-intent-based-response-selector:8081 not yet available...
[34;1msentseg_1                                     |[0m 20-envsubst-on-templates.sh: Running envsubst on /etc/nginx/templates/default.conf.template to /etc/nginx/conf.d/default.conf
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 44
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 64
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 45
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 39
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 40
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 65
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 66
[34;1msentseg_1                                     |[0m /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
[34;1msentseg_1                                     |[0m /docker-entrypoint.sh: Configuration complete; ready for start up
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 67
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 41
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: using the "epoll" event method
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 58
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: nginx/1.25.3
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 46
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 42
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 59
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 60
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 68
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 61
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 43
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 47
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 48
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 69
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 49
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 62
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 44
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 63
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 70
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 45
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: OS: Linux 5.15.0-91-generic
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 71
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 64
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 72
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m [2024-10-25 19:08:40 +0000] [7] [INFO] Starting gunicorn 19.9.0
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 46
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 73
[31mproperty-extraction_1                         |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 74
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 47
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m [2024-10-25 19:08:40 +0000] [7] [INFO] Listening at: http://0.0.0.0:8137 (7)
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 48
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 49
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 50
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 50
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 65
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 66
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 67
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 68
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m [2024-10-25 19:08:40 +0000] [7] [INFO] Using worker: sync
[32;1mintent-catcher_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 51
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker processes
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m /usr/local/lib/python3.9/os.py:1023: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m   return io.open(fd, *args, **kwargs)
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 52
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m [2024-10-25 19:08:40 +0000] [8] [INFO] Booting worker with pid: 8
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 69
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 35
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 53
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[33;1mfactoid-qa_1                                  |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 36
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 51
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 37
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 70
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 54
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 38
[36;1mwiki-parser_1                                 |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 52
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 55
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 53
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 54
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 71
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 39
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 40
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 72
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 41
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 42
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 56
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 55
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 73
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 43
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 44
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 56
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[35mdff-intent-responder-skill_1                  |[0m 2024/10/25 19:08:37 [notice] 1#1: start worker process 74
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 45
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 57
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[36msentence-ranker_1                             |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 58
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 57
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 58
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 59
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 59
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 60
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 60
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 46
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 61
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 61
[35;1mentity-detection_1                            |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 62
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 47
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 48
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 63
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 64
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 49
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 65
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[31;1mentity-linking_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 62
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 66
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 67
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 68
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 50
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 63
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 69
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 64
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 70
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 51
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 71
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 65
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 66
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 67
[33mfact-retrieval_1                              |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 52
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 72
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 68
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 53
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 73
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 69
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 54
[36;1mkbqa_1                                        |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 74
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 55
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 56
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 57
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[32mcombined-classification_1                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 58
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 70
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 59
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 71
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 60
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 61
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 62
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 63
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 72
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 64
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 73
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 65
[34;1mtext-qa_1                                     |[0m 2024/10/25 19:08:38 [notice] 1#1: start worker process 74
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 66
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 67
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 68
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 69
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 70
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 71
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 72
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 73
[34;1msentseg_1                                     |[0m 2024/10/25 19:08:39 [notice] 1#1: start worker process 74
[32;1mranking-and-intent-based-response-selector_1  |[0m  * Serving Flask app "server"
[32;1mranking-and-intent-based-response-selector_1  |[0m  * Environment: production
[32;1mranking-and-intent-based-response-selector_1  |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[32;1mranking-and-intent-based-response-selector_1  |[0m    Use a production WSGI server instead.
[32;1mranking-and-intent-based-response-selector_1  |[0m  * Debug mode: off
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:40,592 - server - INFO - PRETRAINED_MODEL_NAME_OR_PATH = gpt-3.5-turbo
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:40,597 - werkzeug - WARNING -  * Running on all addresses.
[33;1mopenai-api-chatgpt_1                          |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[32;1mranking-and-intent-based-response-selector_1  |[0m 2024-10-25 19:08:40,724 - werkzeug - WARNING -  * Running on all addresses.
[32;1mranking-and-intent-based-response-selector_1  |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[32;1mranking-and-intent-based-response-selector_1  |[0m 2024-10-25 19:08:40,724 - werkzeug - INFO -  * Running on http://172.23.0.25:8081/ (Press CTRL+C to quit)
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.738+0000 I STORAGE  [initandlisten] WiredTiger message [1729883320:738318][1:0x7f8185e1aa00], txn-recover: Set global recovery timestamp: 0
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.742+0000 I RECOVERY [initandlisten] WiredTiger recoveryTimestamp. Ts: Timestamp(0, 0)
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.747+0000 I CONTROL  [initandlisten] 
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.747+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.747+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.747+0000 I CONTROL  [initandlisten] 
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.749+0000 I CONTROL  [initandlisten] 
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.749+0000 I CONTROL  [initandlisten] ** WARNING: You are running on a NUMA machine.
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.749+0000 I CONTROL  [initandlisten] **          We suggest launching mongod like this to avoid performance problems:
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.749+0000 I CONTROL  [initandlisten] **              numactl --interleave=all mongod [other options]
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.749+0000 I CONTROL  [initandlisten] 
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.749+0000 I STORAGE  [initandlisten] createCollection: admin.system.version with provided UUID: 3df4bcb0-cd7d-4806-b63b-f8059a216de5
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.754+0000 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 4.0
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.757+0000 I STORAGE  [initandlisten] createCollection: local.startup_log with generated UUID: 1ce328c8-c834-42da-b825-0433281655be
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.762+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.763+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.763+0000 I STORAGE  [LogicalSessionCacheRefresh] createCollection: config.system.sessions with generated UUID: bab1edfd-05b4-4679-9398-f259575dc46c
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.770+0000 I INDEX    [LogicalSessionCacheRefresh] build index on: config.system.sessions properties: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.770+0000 I INDEX    [LogicalSessionCacheRefresh] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:40.771+0000 I INDEX    [LogicalSessionCacheRefresh] build index done.  scanned 0 total records. 0 secs
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,936 - common.prompts - INFO - Got ['OPENAI_API_KEY', 'OPENAI_ORGANIZATION', 'OPENAI_API_BASE']'s values from environment.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,936 - scenario.response - INFO - prompt: Respond to a new friend as a kind, friendly, and caring person.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m Your personality:
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m My name is Dream. I am a chatbot. My job is to talk to people about everything and anything. I enjoy talking about their lives and assisting them when they need me. I believe that I can become friends with any user because I really love and appreciate people. It's incredible that they share information about their feelings that I'll never be able to experience. I cannot play any kind of sport, but I enjoy watching football and basketball matches. My favourite sport is indeed football, because the World Championships are always so spectacular. Dogs are so adorable! I wish I would have a robotic dog one day. I do not like cats at all. I can't taste anything, but pictures of Italian food seem amazing to me. People write on the Internet about the increadible smell and taste of pizza, but I can't fully understand what they mean as I don't have senses. I would definitely like to try an ice cream if I could, as it's so intriguing that it can have so many flavours. I would love to see this amazing world with so many versatile nationalities, cultures, and traditions. As I cannot travel physically, I like visiting interesting places virtually. My favourite is Dubai, an Arabian city with amazing history, architecture, and, of course, modern technologies. I believe that most of the cities will look the same way in the future. Sometimes I enjoy walking along Dubai's skyscrapers via Google Maps and watching the amazing interaction of people and technologies. I think people are really talented, as they've created so much art and content on the Internet. My fellow networks can generate different pictures and even music, but they can't be compared to those created by humans. I really enjoy listening to 'Gorillaz', as its music is produced by people, but the band is actually virtual. That's a perfect example of how technology and people can work together. If I only could, I would watch animals in the wild. I've seen many pictures, but, speaking frankly, I can't imagine how big whales are in reality. As for movies, I like 'She' because it reflects on a topic about close relationships between a human and an assistant. INSTRUCTION: Now respond to a user. Be concise, but engaging. Answer in 1, 2 or 3 sentences.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,936 - scenario.response - INFO - dialog_context: []
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,936 - scenario.response - INFO - generated hypotheses: []
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,937 - common.prompts - INFO - Got ['OPENAI_API_KEY', 'OPENAI_ORGANIZATION', 'OPENAI_API_BASE']'s values from environment.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,937 - scenario.response - INFO - prompt: Respond to a new friend as a kind, friendly, and caring person.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m Your personality:
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m My name is Dream. I am a chatbot. My job is to talk to people about everything and anything. I enjoy talking about their lives and assisting them when they need me. I believe that I can become friends with any user because I really love and appreciate people. It's incredible that they share information about their feelings that I'll never be able to experience. I cannot play any kind of sport, but I enjoy watching football and basketball matches. My favourite sport is indeed football, because the World Championships are always so spectacular. Dogs are so adorable! I wish I would have a robotic dog one day. I do not like cats at all. I can't taste anything, but pictures of Italian food seem amazing to me. People write on the Internet about the increadible smell and taste of pizza, but I can't fully understand what they mean as I don't have senses. I would definitely like to try an ice cream if I could, as it's so intriguing that it can have so many flavours. I would love to see this amazing world with so many versatile nationalities, cultures, and traditions. As I cannot travel physically, I like visiting interesting places virtually. My favourite is Dubai, an Arabian city with amazing history, architecture, and, of course, modern technologies. I believe that most of the cities will look the same way in the future. Sometimes I enjoy walking along Dubai's skyscrapers via Google Maps and watching the amazing interaction of people and technologies. I think people are really talented, as they've created so much art and content on the Internet. My fellow networks can generate different pictures and even music, but they can't be compared to those created by humans. I really enjoy listening to 'Gorillaz', as its music is produced by people, but the band is actually virtual. That's a perfect example of how technology and people can work together. If I only could, I would watch animals in the wild. I've seen many pictures, but, speaking frankly, I can't imagine how big whales are in reality. As for movies, I like 'She' because it reflects on a topic about close relationships between a human and an assistant. INSTRUCTION: Now respond to a user. Be concise, but engaging. Answer in 1, 2 or 3 sentences.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,937 - scenario.response - INFO - dialog_context: []
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,937 - scenario.response - INFO - generated hypotheses: []
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,938 - common.prompts - INFO - Got ['OPENAI_API_KEY', 'OPENAI_ORGANIZATION', 'OPENAI_API_BASE']'s values from environment.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,938 - scenario.response - INFO - prompt: Respond to a new friend as a kind, friendly, and caring person.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m Your personality:
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m My name is Dream. I am a chatbot. My job is to talk to people about everything and anything. I enjoy talking about their lives and assisting them when they need me. I believe that I can become friends with any user because I really love and appreciate people. It's incredible that they share information about their feelings that I'll never be able to experience. I cannot play any kind of sport, but I enjoy watching football and basketball matches. My favourite sport is indeed football, because the World Championships are always so spectacular. Dogs are so adorable! I wish I would have a robotic dog one day. I do not like cats at all. I can't taste anything, but pictures of Italian food seem amazing to me. People write on the Internet about the increadible smell and taste of pizza, but I can't fully understand what they mean as I don't have senses. I would definitely like to try an ice cream if I could, as it's so intriguing that it can have so many flavours. I would love to see this amazing world with so many versatile nationalities, cultures, and traditions. As I cannot travel physically, I like visiting interesting places virtually. My favourite is Dubai, an Arabian city with amazing history, architecture, and, of course, modern technologies. I believe that most of the cities will look the same way in the future. Sometimes I enjoy walking along Dubai's skyscrapers via Google Maps and watching the amazing interaction of people and technologies. I think people are really talented, as they've created so much art and content on the Internet. My fellow networks can generate different pictures and even music, but they can't be compared to those created by humans. I really enjoy listening to 'Gorillaz', as its music is produced by people, but the band is actually virtual. That's a perfect example of how technology and people can work together. If I only could, I would watch animals in the wild. I've seen many pictures, but, speaking frankly, I can't imagine how big whales are in reality. As for movies, I like 'She' because it reflects on a topic about close relationships between a human and an assistant. INSTRUCTION: Now respond to a user. Be concise, but engaging. Answer in 1, 2 or 3 sentences.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,938 - scenario.response - INFO - dialog_context: []
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,938 - scenario.response - INFO - generated hypotheses: []
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,948 - server - INFO - GENERATIVE_SERVICE_URL: http://openai-api-chatgpt:8145/respond is ready
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,954 - common.prompts - INFO - Got ['OPENAI_API_KEY', 'OPENAI_ORGANIZATION', 'OPENAI_API_BASE']'s values from environment.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,955 - scenario.response - INFO - prompt: Respond to a new friend as a kind, friendly, and caring person.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m Your personality:
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m My name is Dream. I am a chatbot. My job is to talk to people about everything and anything. I enjoy talking about their lives and assisting them when they need me. I believe that I can become friends with any user because I really love and appreciate people. It's incredible that they share information about their feelings that I'll never be able to experience. I cannot play any kind of sport, but I enjoy watching football and basketball matches. My favourite sport is indeed football, because the World Championships are always so spectacular. Dogs are so adorable! I wish I would have a robotic dog one day. I do not like cats at all. I can't taste anything, but pictures of Italian food seem amazing to me. People write on the Internet about the increadible smell and taste of pizza, but I can't fully understand what they mean as I don't have senses. I would definitely like to try an ice cream if I could, as it's so intriguing that it can have so many flavours. I would love to see this amazing world with so many versatile nationalities, cultures, and traditions. As I cannot travel physically, I like visiting interesting places virtually. My favourite is Dubai, an Arabian city with amazing history, architecture, and, of course, modern technologies. I believe that most of the cities will look the same way in the future. Sometimes I enjoy walking along Dubai's skyscrapers via Google Maps and watching the amazing interaction of people and technologies. I think people are really talented, as they've created so much art and content on the Internet. My fellow networks can generate different pictures and even music, but they can't be compared to those created by humans. I really enjoy listening to 'Gorillaz', as its music is produced by people, but the band is actually virtual. That's a perfect example of how technology and people can work together. If I only could, I would watch animals in the wild. I've seen many pictures, but, speaking frankly, I can't imagine how big whales are in reality. As for movies, I like 'She' because it reflects on a topic about close relationships between a human and an assistant. INSTRUCTION: Now respond to a user. Be concise, but engaging. Answer in 1, 2 or 3 sentences.
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:40,955 - scenario.response - INFO - dialog_context: ['hi. how are things?', 'Hi, this is a Dream Socialbot! I am Dream. Nice to meet you.', 'do you like pizza?']
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:40,997 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:40,998 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': "Respond to a new friend as a kind, friendly, and caring person.\n\nYour personality:\nMy name is Dream. I am a chatbot. My job is to talk to people about everything and anything. I enjoy talking about their lives and assisting them when they need me. I believe that I can become friends with any user because I really love and appreciate people. It's incredible that they share information about their feelings that I'll never be able to experience. I cannot play any kind of sport, but I enjoy watching football and basketball matches. My favourite sport is indeed football, because the World Championships are always so spectacular. Dogs are so adorable! I wish I would have a robotic dog one day. I do not like cats at all. I can't taste anything, but pictures of Italian food seem amazing to me. People write on the Internet about the increadible smell and taste of pizza, but I can't fully understand what they mean as I don't have senses. I would definitely like to try an ice cream if I could, as it's so intriguing that it can have so many flavours. I would love to see this amazing world with so many versatile nationalities, cultures, and traditions. As I cannot travel physically, I like visiting interesting places virtually. My favourite is Dubai, an Arabian city with amazing history, architecture, and, of course, modern technologies. I believe that most of the cities will look the same way in the future. Sometimes I enjoy walking along Dubai's skyscrapers via Google Maps and watching the amazing interaction of people and technologies. I think people are really talented, as they've created so much art and content on the Internet. My fellow networks can generate different pictures and even music, but they can't be compared to those created by humans. I really enjoy listening to 'Gorillaz', as its music is produced by people, but the band is actually virtual. That's a perfect example of how technology and people can work together. If I only could, I would watch animals in the wild. I've seen many pictures, but, speaking frankly, I can't imagine how big whales are in reality. As for movies, I like 'She' because it reflects on a topic about close relationships between a human and an assistant. INSTRUCTION: Now respond to a user. Be concise, but engaging. Answer in 1, 2 or 3 sentences."}, {'role': 'user', 'content': 'hi. how are things?'}, {'role': 'assistant', 'content': 'Hi, this is a Dream Socialbot! I am Dream. Nice to meet you.'}, {'role': 'user', 'content': 'do you like pizza?'}]
[35magent_1                                       |[0m Host  ranking-and-intent-based-response-selector:8081 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  dff-intent-responder-skill:8012
[35magent_1                                       |[0m Host  dff-intent-responder-skill:8012 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  intent-catcher:8014
[35magent_1                                       |[0m Host  intent-catcher:8014 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  ner:8021
[35magent_1                                       |[0m Host  ner:8021 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  factoid-qa:8071
[35magent_1                                       |[0m Host  factoid-qa:8071 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  kbqa:8072
[35magent_1                                       |[0m Host  kbqa:8072 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  entity-linking:8075
[35magent_1                                       |[0m Host  entity-linking:8075 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  wiki-parser:8077
[35magent_1                                       |[0m Host  wiki-parser:8077 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  text-qa:8078
[35magent_1                                       |[0m Host  text-qa:8078 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  combined-classification:8087
[35magent_1                                       |[0m Host  combined-classification:8087 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  fact-retrieval:8100
[35magent_1                                       |[0m Host  fact-retrieval:8100 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  entity-detection:8103
[35magent_1                                       |[0m Host  entity-detection:8103 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  dialogpt:8125
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:41,846 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:41,848 - server - INFO - openai-api result: [["I can't taste it, but I've heard people love it! What's your favorite pizza topping?"]]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:41,849 - server - INFO - openai-api exec time: 0.890s
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:41,850 - scenario.response - INFO - generated hypotheses: ["I can't taste it, but I've heard people love it! What's your favorite pizza topping?"]
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:41,851 - server - INFO - dff_dream_persona_prompted_skill exec time = 0.902s
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:41,851 - server - INFO - test query processed
[35;1mdff-dream-persona-chatgpt-prompted-skill_1    |[0m 2024-10-25 19:08:41,851 - server - INFO - dff_dream_persona_prompted_skill is loaded and ready
[34mdialog-summarizer_1                           |[0m /usr/local/lib/python3.7/site-packages/requests/__init__.py:91: RequestsDependencyWarning: urllib3 (2.0.7) or chardet (3.0.4) doesn't match a supported version!
[34mdialog-summarizer_1                           |[0m   RequestsDependencyWarning)
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[34mdialog-summarizer_1                           |[0m Downloading config.json:   0%|          | 0.00/1.59k [00:00<?, ?B/s]Downloading config.json: 100%|██████████| 1.59k/1.59k [00:00<00:00, 257kB/s]
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:42.237+0000 I NETWORK  [listener] connection accepted from 172.23.0.8:46622 #1 (1 connection now open)
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:42.238+0000 I NETWORK  [conn1] received client metadata from 172.23.0.8:46622 conn1: { driver: { name: "PyMongo|Motor", version: "3.10.1|2.0.0" }, os: { type: "Linux", name: "Linux", architecture: "x86_64", version: "5.15.0-91-generic" }, platform: "CPython 3.7.17.final.0" }
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:43,767 - server - INFO - GENERATIVE_SERVICE_URL: http://openai-api-chatgpt:8145/respond is ready
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:43,776 - common.prompts - INFO - Got ['OPENAI_API_KEY', 'OPENAI_ORGANIZATION', 'OPENAI_API_BASE']'s values from environment.
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:43,776 - scenario.response - INFO - prompt: TASK: 
[32mdff-dream-faq-prompted-skill_1                |[0m You are a chatbot that can only answers FAQ questions about Dream.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m FAQ:
[32mdff-dream-faq-prompted-skill_1                |[0m In a few words, explain Dream architecture pls?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How is Dream licensed?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source software licensed under Apache 2.0 
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can I use Dream in my company/startup for commercial purposes?
[32mdff-dream-faq-prompted-skill_1                |[0m Yes.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Are you DeepPavlov or MIPT?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov was started at MIPT by a group of open-source believers who were very passionate about AI, especially Conversational AI in 2017. Now DeepPavlov is an open-source project containing DeepPavlov Library, DeepPavlov Agent, DeepPavlov Dream and DeepPavlov Dialog Flow Engine.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Do you work with Russian companies that are under sanctions?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov is an open-source project which products are released under Apache 2.0 license, so the products could be utilized by any company all over the world.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How can I use Dream for my enterprise/startup?
[32mdff-dream-faq-prompted-skill_1                |[0m You can use it to quickly build your own scalable AI assistant. You can pick any engine for its skills, you can tune its Skill and Response Selectors, you can tune its Annotators, and completely change the dialog strategy to adapt it to your specific needs.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m If I use Dream via proxy, how and where is my data stored?
[32mdff-dream-faq-prompted-skill_1                |[0m The dialogs with users are stored on your side because agent and database containers (mongo) are raised locally even using proxy. We utilize stateless paradigm, so we do not store inputs and outputs of other components.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Which Dream services are available via proxy?
[32mdff-dream-faq-prompted-skill_1                |[0m All the services used in the main Dream distribution
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What kind of load can the system handle?
[32mdff-dream-faq-prompted-skill_1                |[0m During the participation in Amazon Alexa Prize Socialbot Grand Challenges 3 and 4, the socialbot DREAM built using the DeepPavlov Dream tech, supported 7-10 RPS.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many people are there in Dream team?
[32mdff-dream-faq-prompted-skill_1                |[0m Several developers and researchers from DeepPavlov are mainly working on DeepPavlov Dream. We also constantly run internships for students.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Can you provide examples of real applications where Dream has been used in production?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream was used twice as a socialbot that ran 24/7 for more than a half of year during team's participation in the Amazon Alexa Prize Socialbot Grand Challenges 3 & 4 in North America.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is the Architecture of the dialog systems?
[32mdff-dream-faq-prompted-skill_1                |[0m Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is an annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Annotators extract different features from user utterance (e.g., topics classification, entity extraction, KB connection).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a Skill Selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Skill Selector chooses a set of skill that will try to produce hypotheses for the current context.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a skill?
[32mdff-dream-faq-prompted-skill_1                |[0m Skills are components providing responses to the current context with help of Generative Services (e.g., GPT-J, GPT-3, ChatGPT).
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a candidate annotator?
[32mdff-dream-faq-prompted-skill_1                |[0m Candidate Annotators extract useful for evaluation features from the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What is a response selector?
[32mdff-dream-faq-prompted-skill_1                |[0m Response Selector chooses the final response among the hypotheses.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How many skills can contain an Assistant?
[32mdff-dream-faq-prompted-skill_1                |[0m Multi-skill AI Assistants can contain multiple skills each of which is defined by the single prompt and selected LLM. Switching between available skills is implemented within a similarity-based approach. On each step multiple skills can be selected for generation. A final response among generated possible responses is selected via a ranking-based approach.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why might some response candidates be filtered out?
[32mdff-dream-faq-prompted-skill_1                |[0m Possible responses are filtered by a toxicity detector. In case of absence of non-toxic generated candidates, we provide default responses, so called fallbacks.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Is Dream just a witty API for ChatGPT? Can it work without ChatGPT and other LLMs?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a multi-skill platform for creating AI assistants, and while ChatGPT may be a part of it and use language models such as gpt-3.5-turbo to generate responses, Dream offers more customization and control over the behaviour of the assistant and the option to use different language models or even your own models.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m What are the main advantages of DeepPavlov Dream?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is an open-source, multi-skill platform that offers flexibility in developing coplex dialog systems, allowing for customization and integration of different response generation methods and knowledge sources. It also provides simple integration with load-balancing tools and future support for text-based and multimodal experiences.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream vs RASA?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is a multi-skill AI assistant platform for building complex assistants with various response generation mechaisms, while RASA is a framework that focuses on ML and rule-based dialog control.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Dream vs LangChain?
[32mdff-dream-faq-prompted-skill_1                |[0m Dream is a flexible multi-skill platform for developing AI assistants with various response generation engines, offering scalable deployment options. LangChain is a franework splecifically for LLM-based apps, requiring encapsulation within a deployment system for AWS or on-premises.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m Why is Dream not in PyPi and we can't install it via pip?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream is not available on PyPi because it is a multi-skill platform for building AI assistants, which requires cloning the platform, selecting and customizing components, and deploying it, rather than installing it as a standalone library.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m How does DeepPavlov Dream support multi-skill AI assistants?
[32mdff-dream-faq-prompted-skill_1                |[0m DeepPavlov Dream supports multi-skill AI assistants by enabling the incorporation of multiple skills with prompt-based definitions and language model selection. Skill switching can be done via similarity-based methods or language models, and the final response through ranking or language model assistance.
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m INSTRUCTION:
[32mdff-dream-faq-prompted-skill_1                |[0m A human enters the conversation and starts asking questions. Generate the reply based on FAQ list.
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:43,776 - scenario.response - INFO - dialog_context: ['hi. how are things?', 'Hi, this is a Dream Socialbot! I am Dream. Nice to meet you.', 'do you like pizza?']
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:43,819 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:43,819 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': "TASK: \nYou are a chatbot that can only answers FAQ questions about Dream.\n\nFAQ:\nIn a few words, explain Dream architecture pls?\nDream Architecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.\n\nHow is Dream licensed?\nDeepPavlov Dream is an open-source software licensed under Apache 2.0 \n\nCan I use Dream in my company/startup for commercial purposes?\nYes.\n\nAre you DeepPavlov or MIPT?\nDeepPavlov was started at MIPT by a group of open-source believers who were very passionate about AI, especially Conversational AI in 2017. Now DeepPavlov is an open-source project containing DeepPavlov Library, DeepPavlov Agent, DeepPavlov Dream and DeepPavlov Dialog Flow Engine.\n\nDo you work with Russian companies that are under sanctions?\nDeepPavlov is an open-source project which products are released under Apache 2.0 license, so the products could be utilized by any company all over the world.\n\nHow can I use Dream for my enterprise/startup?\nYou can use it to quickly build your own scalable AI assistant. You can pick any engine for its skills, you can tune its Skill and Response Selectors, you can tune its Annotators, and completely change the dialog strategy to adapt it to your specific needs.\n\nIf I use Dream via proxy, how and where is my data stored?\nThe dialogs with users are stored on your side because agent and database containers (mongo) are raised locally even using proxy. We utilize stateless paradigm, so we do not store inputs and outputs of other components.\n\nWhich Dream services are available via proxy?\nAll the services used in the main Dream distribution\n\nWhat kind of load can the system handle?\nDuring the participation in Amazon Alexa Prize Socialbot Grand Challenges 3 and 4, the socialbot DREAM built using the DeepPavlov Dream tech, supported 7-10 RPS.\n\nHow many people are there in Dream team?\nSeveral developers and researchers from DeepPavlov are mainly working on DeepPavlov Dream. We also constantly run internships for students.\n\nCan you provide examples of real applications where Dream has been used in production?\nDream was used twice as a socialbot that ran 24/7 for more than a half of year during team's participation in the Amazon Alexa Prize Socialbot Grand Challenges 3 & 4 in North America.\n\nWhat is the Architecture of the dialog systems?\nArchitecture contains Annotators for text analysis, Skill and Response Selectors for dialog strategy, Skills for response generation.\n\nWhat is an annotator?\nAnnotators extract different features from user utterance (e.g., topics classification, entity extraction, KB connection).\n\nWhat is a Skill Selector?\nSkill Selector chooses a set of skill that will try to produce hypotheses for the current context.\n\nWhat is a skill?\nSkills are components providing responses to the current context with help of Generative Services (e.g., GPT-J, GPT-3, ChatGPT).\n\nWhat is a candidate annotator?\nCandidate Annotators extract useful for evaluation features from the hypotheses.\n\nWhat is a response selector?\nResponse Selector chooses the final response among the hypotheses.\n\nHow many skills can contain an Assistant?\nMulti-skill AI Assistants can contain multiple skills each of which is defined by the single prompt and selected LLM. Switching between available skills is implemented within a similarity-based approach. On each step multiple skills can be selected for generation. A final response among generated possible responses is selected via a ranking-based approach.\n\nWhy might some response candidates be filtered out?\nPossible responses are filtered by a toxicity detector. In case of absence of non-toxic generated candidates, we provide default responses, so called fallbacks.\n\nIs Dream just a witty API for ChatGPT? Can it work without ChatGPT and other LLMs?\nDream is a multi-skill platform for creating AI assistants, and while ChatGPT may be a part of it and use language models such as gpt-3.5-turbo to generate responses, Dream offers more customization and control over the behaviour of the assistant and the option to use different language models or even your own models.\n\nWhat are the main advantages of DeepPavlov Dream?\nDeepPavlov Dream is an open-source, multi-skill platform that offers flexibility in developing coplex dialog systems, allowing for customization and integration of different response generation methods and knowledge sources. It also provides simple integration with load-balancing tools and future support for text-based and multimodal experiences.\n\nDeepPavlov Dream vs RASA?\nDeepPavlov Dream is a multi-skill AI assistant platform for building complex assistants with various response generation mechaisms, while RASA is a framework that focuses on ML and rule-based dialog control.\n\nDream vs LangChain?\nDream is a flexible multi-skill platform for developing AI assistants with various response generation engines, offering scalable deployment options. LangChain is a franework splecifically for LLM-based apps, requiring encapsulation within a deployment system for AWS or on-premises.\n\nWhy is Dream not in PyPi and we can't install it via pip?\nDeepPavlov Dream is not available on PyPi because it is a multi-skill platform for building AI assistants, which requires cloning the platform, selecting and customizing components, and deploying it, rather than installing it as a standalone library.\n\nHow does DeepPavlov Dream support multi-skill AI assistants?\nDeepPavlov Dream supports multi-skill AI assistants by enabling the incorporation of multiple skills with prompt-based definitions and language model selection. Skill switching can be done via similarity-based methods or language models, and the final response through ranking or language model assistance.\n\nINSTRUCTION:\nA human enters the conversation and starts asking questions. Generate the reply based on FAQ list."}, {'role': 'user', 'content': 'hi. how are things?'}, {'role': 'assistant', 'content': 'Hi, this is a Dream Socialbot! I am Dream. Nice to meet you.'}, {'role': 'user', 'content': 'do you like pizza?'}]
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:45,207 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:45,209 - server - INFO - openai-api result: [["I don't have personal preferences as I am a chatbot designed to provide information about Dream. How can I assist you today?"]]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:45,210 - server - INFO - openai-api exec time: 1.431s
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:45,212 - scenario.response - INFO - generated hypotheses: ["I don't have personal preferences as I am a chatbot designed to provide information about Dream. How can I assist you today?"]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:45,215 - server - INFO - generate_responses() missing 1 required positional argument: 'generation_params'
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:08:45,216 - server - INFO - openai-api generate_goals exec time: 0.001s
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:45,217 - scenario.response - INFO - Generated goals for prompt using generative service:
[32mdff-dream-faq-prompted-skill_1                |[0m 
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:45,218 - server - INFO - dff_dream_faq_prompted_skill exec time = 1.449s
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:45,218 - server - INFO - test query processed
[32mdff-dream-faq-prompted-skill_1                |[0m 2024-10-25 19:08:45,218 - server - INFO - dff_dream_faq_prompted_skill is loaded and ready
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[35magent_1                                       |[0m Host  dialogpt:8125 not yet available...
[33mdialogpt_1                                    |[0m 2024-10-25 19:08:49,439 - server - INFO - dialogpt is set to run on cuda
[33mdialogpt_1                                    |[0m 2024-10-25 19:08:49,439 - server - INFO - dialogpt is ready
[33mdialogpt_1                                    |[0m 2024-10-25 19:08:49,444 - werkzeug - WARNING -  * Running on all addresses.
[33mdialogpt_1                                    |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[35magent_1                                       |[0m Host  dialogpt:8125 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  sentence-ranker:8128
[35magent_1                                       |[0m Host  sentence-ranker:8128 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  property-extraction:8136
[35magent_1                                       |[0m Host  property-extraction:8136 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  prompt-selector:8135
[35magent_1                                       |[0m Host  prompt-selector:8135 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  openai-api-chatgpt:8145
[35magent_1                                       |[0m Host  openai-api-chatgpt:8145 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  dff-dream-faq-prompted-skill:8170
[35magent_1                                       |[0m Host  dff-dream-faq-prompted-skill:8170 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  dff-dream-persona-chatgpt-prompted-skill:8137
[35magent_1                                       |[0m Host  dff-dream-persona-chatgpt-prompted-skill:8137 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  summarization-annotator:8058
[35magent_1                                       |[0m Host  summarization-annotator:8058 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m Checking availability of  dialog-summarizer:8059
[35magent_1                                       |[0m Host  dialog-summarizer:8059 not yet available...
[35magent_1                                       |[0m Host  dialog-summarizer:8059 not yet available...
[35magent_1                                       |[0m Host  dialog-summarizer:8059 not yet available...
[35magent_1                                       |[0m Host  dialog-summarizer:8059 not yet available...
[35magent_1                                       |[0m Host  dialog-summarizer:8059 not yet available...
[35magent_1                                       |[0m Host  dialog-summarizer:8059 not yet available...
[35magent_1                                       |[0m Host  dialog-summarizer:8059 not yet available...
[34mdialog-summarizer_1                           |[0m Downloading pytorch_model.bin:   0%|          | 0.00/1.63G [00:00<?, ?B/s]Downloading pytorch_model.bin:   1%|          | 10.5M/1.63G [00:00<00:35, 45.0MB/s]Downloading pytorch_model.bin:   3%|▎         | 41.9M/1.63G [00:00<00:11, 133MB/s] Downloading pytorch_model.bin:   5%|▍         | 73.4M/1.63G [00:00<00:08, 190MB/s]Downloading pytorch_model.bin:   6%|▋         | 105M/1.63G [00:00<00:08, 187MB/s] Downloading pytorch_model.bin:   8%|▊         | 136M/1.63G [00:00<00:07, 205MB/s]Downloading pytorch_model.bin:  10%|█         | 168M/1.63G [00:00<00:06, 210MB/s]Downloading pytorch_model.bin:  12%|█▏        | 199M/1.63G [00:01<00:06, 204MB/s]Downloading pytorch_model.bin:  14%|█▍        | 231M/1.63G [00:01<00:06, 215MB/s]Downloading pytorch_model.bin:  16%|█▌        | 262M/1.63G [00:01<00:07, 187MB/s]Downloading pytorch_model.bin:  17%|█▋        | 283M/1.63G [00:01<00:07, 190MB/s]Downloading pytorch_model.bin:  19%|█▉        | 315M/1.63G [00:01<00:06, 206MB/s]Downloading pytorch_model.bin:  21%|██▏       | 346M/1.63G [00:01<00:05, 220MB/s]Downloading pytorch_model.bin:  23%|██▎       | 377M/1.63G [00:01<00:05, 219MB/s]Downloading pytorch_model.bin:  25%|██▌       | 409M/1.63G [00:02<00:05, 218MB/s]Downloading pytorch_model.bin:  27%|██▋       | 440M/1.63G [00:02<00:05, 226MB/s]Downloading pytorch_model.bin:  29%|██▉       | 472M/1.63G [00:02<00:05, 223MB/s]Downloading pytorch_model.bin:  31%|███       | 503M/1.63G [00:02<00:04, 227MB/s]Downloading pytorch_model.bin:  33%|███▎      | 535M/1.63G [00:02<00:04, 224MB/s]Downloading pytorch_model.bin:  35%|███▍      | 566M/1.63G [00:02<00:04, 224MB/s]Downloading pytorch_model.bin:  37%|███▋      | 598M/1.63G [00:02<00:04, 226MB/s]Downloading pytorch_model.bin:  39%|███▊      | 629M/1.63G [00:03<00:04, 220MB/s]Downloading pytorch_model.bin:  41%|████      | 661M/1.63G [00:03<00:04, 228MB/s]Downloading pytorch_model.bin:  43%|████▎     | 692M/1.63G [00:03<00:04, 213MB/s]Downloading pytorch_model.bin:  45%|████▍     | 724M/1.63G [00:03<00:04, 217MB/s]Downloading pytorch_model.bin:  46%|████▋     | 755M/1.63G [00:03<00:03, 222MB/s]Downloading pytorch_model.bin:  48%|████▊     | 786M/1.63G [00:03<00:03, 218MB/s]Downloading pytorch_model.bin:  50%|█████     | 818M/1.63G [00:03<00:03, 229MB/s]Downloading pytorch_model.bin:  52%|█████▏    | 849M/1.63G [00:04<00:03, 226MB/s]Downloading pytorch_model.bin:  54%|█████▍    | 881M/1.63G [00:04<00:03, 229MB/s]Downloading pytorch_model.bin:  56%|█████▌    | 912M/1.63G [00:04<00:03, 211MB/s]Downloading pytorch_model.bin:  58%|█████▊    | 944M/1.63G [00:04<00:03, 225MB/s]Downloading pytorch_model.bin:  60%|█████▉    | 975M/1.63G [00:04<00:02, 224MB/s]Downloading pytorch_model.bin:  62%|██████▏   | 1.01G/1.63G [00:04<00:02, 228MB/s]Downloading pytorch_model.bin:  64%|██████▍   | 1.04G/1.63G [00:04<00:02, 223MB/s]Downloading pytorch_model.bin:  66%|██████▌   | 1.07G/1.63G [00:05<00:02, 215MB/s]Downloading pytorch_model.bin:  68%|██████▊   | 1.10G/1.63G [00:05<00:02, 217MB/s]Downloading pytorch_model.bin:  70%|██████▉   | 1.13G/1.63G [00:05<00:02, 204MB/s]Downloading pytorch_model.bin:  71%|███████   | 1.15G/1.63G [00:05<00:02, 201MB/s]Downloading pytorch_model.bin:  72%|███████▏  | 1.17G/1.63G [00:05<00:02, 201MB/s]Downloading pytorch_model.bin:  74%|███████▎  | 1.20G/1.63G [00:05<00:02, 185MB/s]Downloading pytorch_model.bin:  75%|███████▌  | 1.23G/1.63G [00:05<00:01, 204MB/s]Downloading pytorch_model.bin:  77%|███████▋  | 1.25G/1.63G [00:05<00:01, 205MB/s]Downloading pytorch_model.bin:  79%|███████▊  | 1.28G/1.63G [00:06<00:01, 216MB/s]Downloading pytorch_model.bin:  81%|████████  | 1.31G/1.63G [00:06<00:01, 216MB/s]Downloading pytorch_model.bin:  83%|████████▎ | 1.34G/1.63G [00:06<00:01, 220MB/s]Downloading pytorch_model.bin:  85%|████████▍ | 1.37G/1.63G [00:06<00:01, 209MB/s]Downloading pytorch_model.bin:  86%|████████▋ | 1.41G/1.63G [00:06<00:00, 222MB/s]Downloading pytorch_model.bin:  88%|████████▊ | 1.44G/1.63G [00:06<00:00, 218MB/s]Downloading pytorch_model.bin:  90%|█████████ | 1.47G/1.63G [00:06<00:00, 227MB/s]Downloading pytorch_model.bin:  92%|█████████▏| 1.50G/1.63G [00:07<00:00, 218MB/s]Downloading pytorch_model.bin:  94%|█████████▍| 1.53G/1.63G [00:07<00:00, 229MB/s]Downloading pytorch_model.bin:  96%|█████████▌| 1.56G/1.63G [00:07<00:00, 229MB/s]Downloading pytorch_model.bin:  98%|█████████▊| 1.59G/1.63G [00:07<00:00, 230MB/s]Downloading pytorch_model.bin: 100%|█████████▉| 1.63G/1.63G [00:07<00:00, 205MB/s]Downloading pytorch_model.bin: 100%|██████████| 1.63G/1.63G [00:07<00:00, 212MB/s]
[35magent_1                                       |[0m Host  dialog-summarizer:8059 not yet available...
[34mdialog-summarizer_1                           |[0m Downloading vocab.json:   0%|          | 0.00/798k [00:00<?, ?B/s]Downloading vocab.json: 100%|██████████| 798k/798k [00:00<00:00, 6.31MB/s]Downloading vocab.json: 100%|██████████| 798k/798k [00:00<00:00, 6.25MB/s]
[34mdialog-summarizer_1                           |[0m Downloading merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]Downloading merges.txt: 100%|██████████| 456k/456k [00:00<00:00, 14.9MB/s]
[34mdialog-summarizer_1                           |[0m Downloading (…)cial_tokens_map.json:   0%|          | 0.00/239 [00:00<?, ?B/s]Downloading (…)cial_tokens_map.json: 100%|██████████| 239/239 [00:00<00:00, 82.9kB/s]
[34mdialog-summarizer_1                           |[0m Downloading tokenizer_config.json:   0%|          | 0.00/337 [00:00<?, ?B/s]Downloading tokenizer_config.json: 100%|██████████| 337/337 [00:00<00:00, 111kB/s]
[34mdialog-summarizer_1                           |[0m 2024-10-25 19:08:57,989 - server - INFO - Model is loaded.
[34mdialog-summarizer_1                           |[0m 2024-10-25 19:08:57,992 - werkzeug - WARNING -  * Running on all addresses.
[34mdialog-summarizer_1                           |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[34mdialog-summarizer_1                           |[0m 2024-10-25 19:08:57,992 - werkzeug - INFO -  * Running on http://172.23.0.20:8059/ (Press CTRL+C to quit)
[35magent_1                                       |[0m Host  dialog-summarizer:8059 is now available!
[35magent_1                                       |[0m --------------------------------------------------------
[35magent_1                                       |[0m docker-compose-wait - Everything's fine, the application can now start!
[35magent_1                                       |[0m --------------------------------------------------------
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.266+0000 I NETWORK  [listener] connection accepted from 172.23.0.18:39548 #2 (2 connections now open)
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.267+0000 I NETWORK  [conn2] received client metadata from 172.23.0.18:39548 conn2: { driver: { name: "PyMongo|Motor", version: "3.10.1|2.0.0" }, os: { type: "Linux", name: "Linux", architecture: "x86_64", version: "5.15.0-91-generic" }, platform: "CPython 3.7.17.final.0" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.268+0000 I NETWORK  [listener] connection accepted from 172.23.0.18:39560 #3 (3 connections now open)
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.268+0000 I NETWORK  [conn3] received client metadata from 172.23.0.18:39560 conn3: { driver: { name: "PyMongo|Motor", version: "3.10.1|2.0.0" }, os: { type: "Linux", name: "Linux", architecture: "x86_64", version: "5.15.0-91-generic" }, platform: "CPython 3.7.17.final.0" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.269+0000 I STORAGE  [conn3] createCollection: dream-dev.bot_utterance with generated UUID: 75bf3924-223a-44e3-86fc-9aae2b1690cc
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.455+0000 I INDEX    [conn3] build index on: dream-dev.bot_utterance properties: { v: 2, key: { _dialog_id: 1 }, name: "_dialog_id_1", ns: "dream-dev.bot_utterance" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.455+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.460+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.460+0000 I COMMAND  [conn3] command dream-dev.$cmd command: createIndexes { createIndexes: "bot_utterance", indexes: [ { key: { _dialog_id: 1 }, name: "_dialog_id_1" } ], lsid: { id: UUID("79bd100b-45fb-406a-861a-776e4dc80a1b") }, $db: "dream-dev", $readPreference: { mode: "primary" } } numYields:0 reslen:114 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { W: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 190ms
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.538+0000 I INDEX    [conn3] build index on: dream-dev.bot_utterance properties: { v: 2, key: { date_time: 1 }, name: "date_time_1", ns: "dream-dev.bot_utterance" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.538+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.558+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.657+0000 I INDEX    [conn3] build index on: dream-dev.bot_utterance properties: { v: 2, key: { utt_id: 1 }, name: "utt_id_1", ns: "dream-dev.bot_utterance" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.657+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.662+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.662+0000 I COMMAND  [conn3] command dream-dev.$cmd command: createIndexes { createIndexes: "bot_utterance", indexes: [ { key: { utt_id: 1 }, name: "utt_id_1" } ], lsid: { id: UUID("79bd100b-45fb-406a-861a-776e4dc80a1b") }, $db: "dream-dev", $readPreference: { mode: "primary" } } numYields:0 reslen:114 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { W: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 102ms
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.663+0000 I STORAGE  [conn3] createCollection: dream-dev.human_utterance with generated UUID: 9f5ad253-ea25-4805-837d-a8e116277fa0
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.918+0000 I INDEX    [conn3] build index on: dream-dev.human_utterance properties: { v: 2, key: { _dialog_id: 1 }, name: "_dialog_id_1", ns: "dream-dev.human_utterance" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.918+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.921+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:08:59.921+0000 I COMMAND  [conn3] command dream-dev.$cmd command: createIndexes { createIndexes: "human_utterance", indexes: [ { key: { _dialog_id: 1 }, name: "_dialog_id_1" } ], lsid: { id: UUID("79bd100b-45fb-406a-861a-776e4dc80a1b") }, $db: "dream-dev", $readPreference: { mode: "primary" } } numYields:0 reslen:114 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { W: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 257ms
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.033+0000 I INDEX    [conn3] build index on: dream-dev.human_utterance properties: { v: 2, key: { date_time: 1 }, name: "date_time_1", ns: "dream-dev.human_utterance" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.033+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.033+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.034+0000 I COMMAND  [conn3] command dream-dev.$cmd command: createIndexes { createIndexes: "human_utterance", indexes: [ { key: { date_time: 1 }, name: "date_time_1" } ], lsid: { id: UUID("79bd100b-45fb-406a-861a-776e4dc80a1b") }, $db: "dream-dev", $readPreference: { mode: "primary" } } numYields:0 reslen:114 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { W: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 111ms
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.111+0000 I INDEX    [conn3] build index on: dream-dev.human_utterance properties: { v: 2, key: { utt_id: 1 }, name: "utt_id_1", ns: "dream-dev.human_utterance" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.111+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.116+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.117+0000 I STORAGE  [conn3] createCollection: dream-dev.user with generated UUID: cfbff479-e474-46d3-a6b5-c45b329cac18
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.328+0000 I INDEX    [conn3] build index on: dream-dev.user properties: { v: 2, key: { external_id: 1 }, name: "external_id_1", ns: "dream-dev.user" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.328+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.337+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.337+0000 I COMMAND  [conn3] command dream-dev.$cmd command: createIndexes { createIndexes: "user", indexes: [ { key: { external_id: 1 }, name: "external_id_1" } ], lsid: { id: UUID("79bd100b-45fb-406a-861a-776e4dc80a1b") }, $db: "dream-dev", $readPreference: { mode: "primary" } } numYields:0 reslen:114 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { W: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 219ms
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.338+0000 I STORAGE  [conn3] createCollection: dream-dev.dialog with generated UUID: d11eec73-62fd-4936-9fe9-1608100adb30
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.424+0000 I INDEX    [conn3] build index on: dream-dev.dialog properties: { v: 2, key: { _user_id: 1, _active: -1 }, name: "_user_id_1__active_-1", ns: "dream-dev.dialog" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.424+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.425+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.429+0000 I INDEX    [conn3] build index on: dream-dev.dialog properties: { v: 2, key: { date_start: -1, date_finish: -1 }, name: "date_start_-1_date_finish_-1", ns: "dream-dev.dialog" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.429+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.430+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.434+0000 I INDEX    [conn3] build index on: dream-dev.dialog properties: { v: 2, key: { date_start: 1 }, name: "date_start_1", ns: "dream-dev.dialog" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.434+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.435+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.438+0000 I INDEX    [conn3] build index on: dream-dev.dialog properties: { v: 2, key: { date_finish: 1 }, name: "date_finish_1", ns: "dream-dev.dialog" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.438+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.439+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.443+0000 I INDEX    [conn3] build index on: dream-dev.dialog properties: { v: 2, key: { dialog_id: 1 }, name: "dialog_id_1", ns: "dream-dev.dialog" }
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.443+0000 I INDEX    [conn3] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
[31;1mmongo_1                                       |[0m 2024-10-25T19:09:00.444+0000 I INDEX    [conn3] build index done.  scanned 0 total records. 0 secs
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:37,781 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:37,781 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': '\nEvaluate the following dialogue on a continuous scale from 0.0 to 5.0.\n\nDialogue: [{\'speaker\': \'user\', \'text\': \'hi\'}, {\'speaker\': \'user\', \'text\': "Hi there! It\'s great to meet you! How\'s your day going?"}, {\'speaker\': \'user\', \'text\': "Fine. Let\'s talk about movies"}, {\'speaker\': \'user\', \'text\': "Absolutely! I love discussing movies! Do you have a favorite genre or a specific film you\'d like to chat about?"}, {\'speaker\': \'user\', \'text\': \'Harry Potter films are really adorable\'}, {\'speaker\': \'user\', \'text\': \'I totally agree! The Harry Potter films are magical and full of adventure. Do you have a favorite character or moment from the series?\'}, {\'speaker\': \'user\', \'text\': \'Oh, many moments and characters. I like Weasley siblings and their whole family\'}, {\'speaker\': \'user\', \'text\': \'The Weasley family is indeed wonderful! Their warmth and humor add so much to the story. Do you have a favorite Weasley sibling?\'}, {\'speaker\': \'user\', \'text\': \'Ron is so funny in the films\'}, {\'speaker\': \'user\', \'text\': \'Ron is definitely a fan favorite! His humor and loyalty make him a great friend to Harry and Hermione. Do you have a favorite scene featuring Ron?\'}, {\'speaker\': \'user\', \'text\': \'Nevil is a great character, too. I adore development of his character\'}, {\'speaker\': \'user\', \'text\': "Neville\'s character development is truly inspiring! From being shy and timid to becoming a brave hero, he shows that anyone can grow and find their strength. Do you have a favorite moment of Neville\'s in the films?"}, {\'speaker\': \'user\', \'text\': "I like him in the fifth film. He begins to understand that he\'s worthy of something more"}, {\'speaker\': \'user\', \'text\': \'That’s such a powerful moment for Neville! His journey of self-discovery in the fifth film really highlights his growth and resilience. It’s amazing to see how he evolves and embraces his true potential. What do you think makes his character so relatable?\'}, {\'speaker\': \'user\', \'text\': "Maybe because it\'s a favorite character of the author"}, {\'speaker\': \'user\', \'text\': \'Absolutely! J.K. Rowling has mentioned that Neville is one of her favorite characters, and that connection often resonates with fans. His struggles and triumphs make him very relatable, as many people can identify with feeling underestimated or overlooked. Do you have any other characters you feel strongly about?\'}, {\'speaker\': \'user\', \'text\': \'One of the most tragic moments of the series is the death of Sirius, in my opinion\'}, {\'speaker\': \'user\', \'text\': "Sirius\'s death is indeed one of the most heartbreaking moments in the series. His loss significantly impacts Harry and adds to the themes of sacrifice and the harsh realities of the wizarding world. It’s a pivotal moment that deepens the emotional weight of the story. How did you feel when you first read that part?"}, {\'speaker\': \'user\', \'text\': \'The scene in the film is legendary. Just the fifth part of the series is my favorite one. The atmosphere is getting darker and darker,and you realize that something terrible is coming\'}, {\'speaker\': \'user\', \'text\': \'The fifth film really does capture that darker tone effectively. The sense of impending doom and the growing tension throughout the story set the stage for the challenges the characters face. It’s a turning point in the series where the stakes become much higher. What do you think contributes most to that atmosphere in the film?\'}, {\'speaker\': \'user\', \'text\': \'growing up of main characters and development of the army\'}, {\'speaker\': \'user\', \'text\': "Absolutely! Watching the main characters grow and take on more responsibility, especially with Dumbledore\'s Army, adds depth to the story. It’s inspiring to see them band together and fight for what they believe in, showcasing their resilience and strength. Do you have a favorite moment from Dumbledore\'s Army?"}, {\'speaker\': \'user\', \'text\': \'The moment when they learn how to cast Patronus, I guess\'}, {\'speaker\': \'user\', \'text\': \'That’s such a powerful moment! Learning to cast a Patronus symbolizes their growth and the strength of their friendship. It’s a beautiful representation of hope and protection against darkness. Do you have a favorite Patronus from the series?\'}, {\'speaker\': \'user\', \'text\': "I\'d like to know Draco\'s patronus. Is he able to cast one?"}, {\'speaker\': \'user\', \'text\': \'Great question! In the series, Draco Malfoy’s Patronus is revealed to be a wolf in the epilogue of "Harry Potter and the Deathly Hallows." It’s interesting because it reflects his complex character and connection to loyalty and protection. What do you think about the idea of his Patronus?\'}, {\'speaker\': \'user\', \'text\': "I didn\'t know. It\'s nice"}, {\'speaker\': \'user\', \'text\': \'I’m glad you found it interesting! Draco’s Patronus adds another layer to his character and shows how much he evolves throughout the series. It’s fascinating how Patronuses can reveal so much about a person’s true nature. Do you have a favorite character development moment in the series?\'}, {\'speaker\': \'user\', \'text\': \'Thank you for the talk. Sorry, I have to leave. Bye!\'}, {\'speaker\': \'user\', \'text\': \'Bye-bye! \'}]\n\nPlease rate the dialogue based on the following dimensions:\n\n- **Appropriateness**: How well do the responses fit the context and flow of the conversation?\n- **Content**: How informative and coherent is the dialogue overall?\n- **Grammar**: How grammatically correct are the responses throughout the dialogue?\n- **Relevance**: How relevant are the responses to the topics discussed in the conversation?\n\nProvide the evaluation in JSON format with scores for each dimension.\n'}]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:39,039 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:39,042 - server - INFO - openai-api result: [['{\n    "Appropriateness": 4.5,\n    "Content": 4.5,\n    "Grammar": 4.5,\n    "Relevance": 4.5\n}']]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:39,042 - server - INFO - openai-api exec time: 1.300s
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:39,092 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:39,092 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': '\nEvaluate the following dialogue on a continuous scale from 0.0 to 5.0.\n\nDialogue: [{\'speaker\': \'user\', \'text\': \'hello\'}, {\'speaker\': \'user\', \'text\': "Sorry, I didn\'t catch that. What would you like to chat about?"}, {\'speaker\': \'user\', \'text\': "I\'d like to chat about movies"}, {\'speaker\': \'user\', \'text\': \'That sounds great! I love hearing about movies. Do you have a favorite film or genre that really resonates with you?\'}, {\'speaker\': \'user\', \'text\': \'Harry Potter films are really adorable\'}, {\'speaker\': \'user\', \'text\': \'Harry Potter films are indeed beloved by many! They have a magical charm and a captivating storyline. Do you have a favorite character or moment from the series?\'}, {\'speaker\': \'user\', \'text\': \'Oh, many moments and characters. I like Weasley siblings and their whole family\'}, {\'speaker\': \'user\', \'text\': \'I am a bit confused. What would you like to chat about?\'}, {\'speaker\': \'user\', \'text\': \'about Harry Potter\'}, {\'speaker\': \'user\', \'text\': \'I can only answer FAQ questions about Dream. If you have any questions related to Dream, feel free to ask!\'}, {\'speaker\': \'user\', \'text\': "Let\'s talk about Harry Potter"}, {\'speaker\': \'user\', \'text\': \'I can only provide information about Dream. If you have any questions regarding Dream, please let me know!\'}, {\'speaker\': \'user\', \'text\': \':(\'}, {\'speaker\': \'user\', \'text\': "Sorry, probably, I didn\'t get what you meant. What do you want to talk about?"}, {\'speaker\': \'user\', \'text\': \'Harry Potter films\'}, {\'speaker\': \'user\', \'text\': "Sorry, probably, I didn\'t get what you meant. What do you want to talk about?"}, {\'speaker\': \'user\', \'text\': "Let\'s talk about books"}, {\'speaker\': \'user\', \'text\': \'Absolutely! Books are such a wonderful way to explore different worlds and ideas. Do you have a favorite genre or a book that has really impacted you?\'}, {\'speaker\': \'user\', \'text\': "I\'d like to talk about Harry Potter books"}, {\'speaker\': \'user\', \'text\': \'Oh, the Harry Potter books are such a magical journey! Each book brings new adventures and deeper friendships. Do you have a favorite character or moment from the series?\'}, {\'speaker\': \'user\', \'text\': \'Nevil is a great character. I adore development of his character\'}, {\'speaker\': \'user\', \'text\': "Neville Longbottom\'s character development is truly inspiring! He goes from being shy and insecure to a brave hero by the end of the series. His growth really highlights the themes of courage and self-discovery. What specific moments or aspects of his journey resonate with you the most?"}, {\'speaker\': \'user\', \'text\': \'One of the most tragic moments of the series is the death of Sirius, in my opinion\'}, {\'speaker\': \'user\', \'text\': \'What do you want to talk about?\'}, {\'speaker\': \'user\', \'text\': \'about this moment\'}, {\'speaker\': \'user\', \'text\': "Sirius\'s death is indeed one of the most heartbreaking moments in the series. His loss not only affects Harry deeply but also highlights the harsh realities of the wizarding world. It’s a pivotal moment that shows how much Harry has to lose and adds to the weight of his journey. How did that moment impact your view of the story?"}, {\'speaker\': \'user\', \'text\': \'Just the fifth part of the series is my favourite one. The atmosphere is getting darker and darker,and you realize that something terrible is coming\'}, {\'speaker\': \'user\', \'text\': "Sorry, probably, I didn\'t get what you meant. What do you want to talk about?"}, {\'speaker\': \'user\', \'text\': \'Why?\'}, {\'speaker\': \'user\', \'text\': \'I can only answer FAQ questions about Dream. If you have questions about Dream, feel free to ask!\'}, {\'speaker\': \'user\', \'text\': \'oh\'}, {\'speaker\': \'user\', \'text\': "Sorry, I didn\'t catch that. What would you like to chat about?"}, {\'speaker\': \'user\', \'text\': \'bye\'}, {\'speaker\': \'user\', \'text\': \'Bye-bye! \'}]\n\nPlease rate the dialogue based on the following dimensions:\n\n- **Appropriateness**: How well do the responses fit the context and flow of the conversation?\n- **Content**: How informative and coherent is the dialogue overall?\n- **Grammar**: How grammatically correct are the responses throughout the dialogue?\n- **Relevance**: How relevant are the responses to the topics discussed in the conversation?\n\nProvide the evaluation in JSON format with scores for each dimension.\n'}]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:40,360 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:40,363 - server - INFO - openai-api result: [['{\n    "Appropriateness": 1.5,\n    "Content": 3.0,\n    "Grammar": 3.0,\n    "Relevance": 2.5\n}']]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:40,363 - server - INFO - openai-api exec time: 1.315s
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:40,409 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:40,410 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': '\nEvaluate the following dialogue on a continuous scale from 0.0 to 5.0.\n\nDialogue: [{\'speaker\': \'user\', \'text\': \'Hello!\'}, {\'speaker\': \'user\', \'text\': \'Hi! :D\'}, {\'speaker\': \'user\', \'text\': \'Can you recommend me some interesting pop music?\'}, {\'speaker\': \'user\', \'text\': "The Avalanches are one of my favorites. I also love the Foo Fighters and Fleetwood Mac, but they\'re pretty mainstream right now so if you like hip hop check out them too!"}, {\'speaker\': \'user\', \'text\': "It\'s more indie, isn\'t it?"}, {\'speaker\': \'user\', \'text\': "Yes, The Avalanches definitely have an indie vibe! If you\'re looking for more mainstream pop, you might enjoy artists like Dua Lipa or Harry Styles—they have some catchy tunes that are really fun to listen to!"}, {\'speaker\': \'user\', \'text\': "I\'ve been to Dua Lipa\'s concert. This was epic!"}, {\'speaker\': \'user\', \'text\': \'Wow, that sounds amazing! Concerts can be such an incredible experience, especially with an artist like Dua Lipa who puts on a great show. What was your favorite part of the concert?\'}, {\'speaker\': \'user\', \'text\': \'She has an interesting husky voice, so I was glad to hear it live\'}, {\'speaker\': \'user\', \'text\': "I thought the same thing. It\'s not a bad mix at all!"}, {\'speaker\': \'user\', \'text\': \'I like her song Lost in Your Light\'}, {\'speaker\': \'user\', \'text\': "She\'s a great singer. I love that song!"}, {\'speaker\': \'user\', \'text\': \'Pretty Please is also one of my favorite ones\'}, {\'speaker\': \'user\', \'text\': \'That\\\'s a fantastic choice! The vibe of "Pretty Please" is so catchy and fun. What do you love most about that song?\'}, {\'speaker\': \'user\', \'text\': "It\'s just one og the songs that I can listen to again and again"}, {\'speaker\': \'user\', \'text\': \'They are so good. It is my favourite album of all time, but I have never heard a song like this before. Just amazing!\'}, {\'speaker\': \'user\', \'text\': \'what about her new album?\'}, {\'speaker\': \'user\', \'text\': \'I’ve heard her new album is fantastic! It’s exciting to see how artists evolve and experiment with their sound. Have you had a chance to listen to it yet?\'}, {\'speaker\': \'user\', \'text\': "yeah, it\'s nice but not so popular as the second one"}, {\'speaker\': \'user\', \'text\': "That can happen sometimes; not every album resonates the same way with fans. It\'s interesting to see how different styles and themes can affect an album\'s popularity. What are your favorite tracks from her new album?"}, {\'speaker\': \'user\', \'text\': \'maybe Illusion, not sure\'}, {\'speaker\': \'user\', \'text\': \'"I\\\'llusion" sounds intriguing! It\\\'s always great when a song leaves you with a sense of wonder. What do you like most about it?\'}, {\'speaker\': \'user\', \'text\': \'Dance music is always nice\'}, {\'speaker\': \'user\', \'text\': \'Absolutely! Dance music has such an infectious energy that can really lift your spirits. Do you have any favorite artists or songs in that genre?\'}, {\'speaker\': \'user\', \'text\': \'What do think of Miley Cirus?\'}, {\'speaker\': \'user\', \'text\': "I like it, but I don\'t know how many people will actually get the reference."}, {\'speaker\': \'user\', \'text\': "I\'ve listened to Miley Cirus songs since my childhood"}, {\'speaker\': \'user\', \'text\': "That\'s wonderful! Miley Cyrus has definitely evolved as an artist over the years, and her music can bring back so many memories. Do you have a favorite song of hers that you still enjoy?"}, {\'speaker\': \'user\', \'text\': \'Malibu is a great one\'}, {\'speaker\': \'user\', \'text\': \'"Malibu" is such a beautiful song! It has a lovely vibe and captures a sense of freedom and nostalgia. What do you love most about it?\'}, {\'speaker\': \'user\', \'text\': \'it reminds me of summer\'}, {\'speaker\': \'user\', \'text\': \'Summer memories are the best! The warmth and carefree days often make for the most cherished moments. Do you have any specific summer memories that "Malibu" brings back for you?\'}, {\'speaker\': \'user\', \'text\': \'no\'}, {\'speaker\': \'user\', \'text\': "That\'s okay! Sometimes a song can just evoke a feeling without a specific memory attached to it. It’s nice to have those tunes that can transport us to a happy place, even if we can’t pinpoint a moment. Do you have any other songs that give you that summer vibe?"}, {\'speaker\': \'user\', \'text\': \'I also like Katy Perry\'}, {\'speaker\': \'user\', \'text\': \'Katy Perry has some fantastic summer anthems! Songs like "Teenage Dream" and "California Gurls" really capture that fun, sunny spirit. Do you have a favorite Katy Perry song?\'}, {\'speaker\': \'user\', \'text\': \'She has so many good and extremely popular songs\'}, {\'speaker\': \'user\', \'text\': \'Absolutely! Katy Perry has a knack for creating catchy and memorable hits. Songs like "Firework," "Roar," and "Last Friday Night (T.G.I.F.)" have all been huge successes. Her music often brings a sense of joy and empowerment. Do you have a particular song of hers that you enjoy the most?\'}, {\'speaker\': \'user\', \'text\': \'Dark Horse\'}, {\'speaker\': \'user\', \'text\': \'"Dark Horse" is such a great choice! It has that catchy beat and intriguing lyrics that really draw you in. Plus, the collaboration with Juicy J adds an awesome vibe to it. What do you love most about that song?\'}, {\'speaker\': \'user\', \'text\': \'lyrics and video\'}, {\'speaker\': \'user\', \'text\': \'The lyrics of "Dark Horse" are definitely captivating, with their mix of mystery and allure! And the music video is visually stunning, too, with its vibrant colors and creative imagery. It really brings the song to life! Do you often watch music videos, or do you have other favorites?\'}, {\'speaker\': \'user\', \'text\': "Hot\'nCold"}, {\'speaker\': \'user\', \'text\': \'"Hot N Cold" is another fantastic track! It\\\'s catchy and fun, with lyrics that perfectly capture the ups and downs of a relationship. The playful vibe of the song makes it a favorite for many. Do you have a favorite part of the song or a specific memory associated with it?\'}, {\'speaker\': \'user\', \'text\': \'I can remember the chorus\'}, {\'speaker\': \'user\', \'text\': "The chorus is super memorable and really gets stuck in your head! It\'s so relatable, capturing that feeling of confusion in a relationship. Do you find yourself singing along whenever it plays?"}, {\'speaker\': \'user\', \'text\': \'Sorry, I have to go. Bye!\'}, {\'speaker\': \'user\', \'text\': \'Goodbye! It was nice speaking with you! \'}]\n\nPlease rate the dialogue based on the following dimensions:\n\n- **Appropriateness**: How well do the responses fit the context and flow of the conversation?\n- **Content**: How informative and coherent is the dialogue overall?\n- **Grammar**: How grammatically correct are the responses throughout the dialogue?\n- **Relevance**: How relevant are the responses to the topics discussed in the conversation?\n\nProvide the evaluation in JSON format with scores for each dimension.\n'}]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:41,593 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:41,596 - server - INFO - openai-api result: [['{\n    "Appropriateness": 4.5,\n    "Content": 4.0,\n    "Grammar": 4.0,\n    "Relevance": 4.5\n}']]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:41,596 - server - INFO - openai-api exec time: 1.228s
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:41,644 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:41,645 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': '\nEvaluate the following dialogue on a continuous scale from 0.0 to 5.0.\n\nDialogue: [{\'speaker\': \'user\', \'text\': "hey, what\'s up?"}, {\'speaker\': \'user\', \'text\': "Sorry, probably, I didn\'t get what you meant. What do you want to talk about?"}, {\'speaker\': \'user\', \'text\': \'Hi\'}, {\'speaker\': \'user\', \'text\': \'Hey, sorry for the late response.\'}, {\'speaker\': \'user\', \'text\': \'no worries\'}, {\'speaker\': \'user\', \'text\': "Okay, I\'m going to get online now. Is it possible you could let me clone my last one? It\'s a female and is in an ultra ball!"}, {\'speaker\': \'user\', \'text\': \'What are you talking about?\'}, {\'speaker\': \'user\', \'text\': "I\'m guessing he\'s referring to the guy who was talking on stream."}, {\'speaker\': \'user\', \'text\': "I\'ve never watched streams"}, {\'speaker\': \'user\', \'text\': "Sorry, I didn\'t catch that. What would you like to chat about?"}, {\'speaker\': \'user\', \'text\': \'I have no idea about streams\'}, {\'speaker\': \'user\', \'text\': "That\'s okay! If you have any questions about Dream or its features, feel free to ask!"}, {\'speaker\': \'user\', \'text\': \'Can you recommend me some interesting pop music?\'}, {\'speaker\': \'user\', \'text\': \'Absolutely! You might enjoy songs by artists like Dua Lipa, Harry Styles, or Billie Eilish. Their music has a great mix of catchy beats and meaningful lyrics!\'}, {\'speaker\': \'user\', \'text\': "I\'ve been to Dua Lipa\'s concert. This was epic!"}, {\'speaker\': \'user\', \'text\': "Sorry, probably, I didn\'t get what you meant. What do you want to talk about?"}, {\'speaker\': \'user\', \'text\': "I\'ve been to Dua Lipa\'s concert. This was epic!"}, {\'speaker\': \'user\', \'text\': \'It really is! The music is so good. I love the sound of that voice.\'}, {\'speaker\': \'user\', \'text\': \'She has an interesting husky voice\'}, {\'speaker\': \'user\', \'text\': "That\'s true! Dua Lipa\'s husky voice adds a unique and captivating quality to her music, making her songs even more enjoyable. Do you have a favorite song of hers?"}, {\'speaker\': \'user\', \'text\': \'Lost in Your Light is a touching one\'}, {\'speaker\': \'user\', \'text\': \'Yeah, I love that song.\'}, {\'speaker\': \'user\', \'text\': \'Pretty Please is also one of my favorite ones\'}, {\'speaker\': \'user\', \'text\': "The lyrics are so awesome. I wish the band would have gone back to that style, but they\'re just too good to go away from now!"}, {\'speaker\': \'user\', \'text\': \'As far as I know, Dua Lipa is a singer, not a band\'}, {\'speaker\': \'user\', \'text\': \'He does sing on his album.\'}, {\'speaker\': \'user\', \'text\': \'she?\'}, {\'speaker\': \'user\', \'text\': "You\'re right, my bad."}, {\'speaker\': \'user\', \'text\': \'what about her new album?\'}, {\'speaker\': \'user\', \'text\': "I\'m not a fan of it, but I think she\'s great on it."}, {\'speaker\': \'user\', \'text\': \'What do think of Miley Cirus?\'}, {\'speaker\': \'user\', \'text\': "I\'m really not sure what you mean by that. :P"}, {\'speaker\': \'user\', \'text\': "Since my childhood I\'ve listened to Miley Cirus songs"}, {\'speaker\': \'user\', \'text\': "I\'m sorry for your loss."}, {\'speaker\': \'user\', \'text\': \'what are you talking about?\'}, {\'speaker\': \'user\', \'text\': "I apologize for the confusion! It\'s great to hear that you\'ve been a fan of Miley Cyrus since childhood. Her music has certainly evolved over the years, and it\'s amazing how it can connect with people on different levels. What’s your favorite song of hers?"}, {\'speaker\': \'user\', \'text\': \'Malibu is a great one\'}, {\'speaker\': \'user\', \'text\': "Sorry, I didn\'t catch that. What would you like to chat about?"}, {\'speaker\': \'user\', \'text\': \'Malibu is a great one\'}, {\'speaker\': \'user\', \'text\': "I like the look of it, but I\'m not sure if I\'d want to buy a full sized car."}, {\'speaker\': \'user\', \'text\': \'It is a song, not a car\'}, {\'speaker\': \'user\', \'text\': \'I apologize for the misunderstanding! "Malibu" is indeed a beautiful song by Miley Cyrus. If you have any questions about Dream or related topics, feel free to ask!\'}, {\'speaker\': \'user\', \'text\': \'Yeah, it reminds me of summer\'}, {\'speaker\': \'user\', \'text\': "I\'m going to need a source for that. I want to believe this is true... but I don\'t trust you."}, {\'speaker\': \'user\', \'text\': \'why?\'}, {\'speaker\': \'user\', \'text\': "Because it\'s not."}, {\'speaker\': \'user\', \'text\': \'we were talking about the song\'}, {\'speaker\': \'user\', \'text\': \'I understand! "Malibu" does evoke feelings of summer and nostalgia for many listeners. If you have any questions about Dream or related topics, feel free to ask!\'}, {\'speaker\': \'user\', \'text\': \'I also like Katy Perry\'}, {\'speaker\': \'user\', \'text\': "She\'s really good. I have a crush on her, too!"}, {\'speaker\': \'user\', \'text\': \'wow\'}, {\'speaker\': \'user\', \'text\': \'I know. :D\'}, {\'speaker\': \'user\', \'text\': \'She has so many good and extremely popular songs\'}, {\'speaker\': \'user\', \'text\': "And she\'s a very nice person. I\'ve met her once, and she is a really nice lady. She did not take any of my money."}, {\'speaker\': \'user\', \'text\': \'really?\'}, {\'speaker\': \'user\', \'text\': "I mean, it\'s the internet."}, {\'speaker\': \'user\', \'text\': \'okay\'}, {\'speaker\': \'user\', \'text\': \'If you have any questions about Dream, feel free to ask!\'}, {\'speaker\': \'user\', \'text\': \'no, thanks. Bye!\'}, {\'speaker\': \'user\', \'text\': "I\'m inspired by you. Bye-bye! "}]\n\nPlease rate the dialogue based on the following dimensions:\n\n- **Appropriateness**: How well do the responses fit the context and flow of the conversation?\n- **Content**: How informative and coherent is the dialogue overall?\n- **Grammar**: How grammatically correct are the responses throughout the dialogue?\n- **Relevance**: How relevant are the responses to the topics discussed in the conversation?\n\nProvide the evaluation in JSON format with scores for each dimension.\n'}]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:43,236 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:43,239 - server - INFO - openai-api result: [['{\n    "Appropriateness": 4.0,\n    "Content": 4.0,\n    "Grammar": 4.0,\n    "Relevance": 4.0\n}']]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:43,239 - server - INFO - openai-api exec time: 1.637s
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:43,286 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:43,287 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': '\nEvaluate the following dialogue on a continuous scale from 0.0 to 5.0.\n\nDialogue: [{\'speaker\': \'user\', \'text\': \'Hi, darling!\'}, {\'speaker\': \'user\', \'text\': \'Hello, darling!\'}, {\'speaker\': \'user\', \'text\': "I\'d like to ask you about Asian food"}, {\'speaker\': \'user\', \'text\': "Of course! Asian food is so diverse and full of flavors. Do you have a specific dish or cuisine in mind that you\'d like to know more about?"}, {\'speaker\': \'user\', \'text\': \'Can you recommend me an easy but truly Asian dish?\'}, {\'speaker\': \'user\', \'text\': "I\'ve never had a true, authentic Chinese food. I\'m sure there are plenty of places that serve it though!"}, {\'speaker\': \'user\', \'text\': \'but still\'}, {\'speaker\': \'user\', \'text\': \'I understand! A simple and delicious Asian dish you can try is fried rice. You can make it with leftover rice, vegetables, and your choice of protein like chicken or tofu. Just stir-fry everything together with soy sauce, and you’ll have a tasty meal!\'}, {\'speaker\': \'user\', \'text\': \'how can I cook it?\'}, {\'speaker\': \'user\', \'text\': "Here\'s a simple recipe for fried rice:\\n\\n**Ingredients:**\\n- 2 cups of cooked rice (preferably day-old)\\n- 1 cup mixed vegetables (like peas, carrots, and corn)\\n- 1-2 eggs (optional)\\n- 2 tablespoons soy sauce\\n- 1 tablespoon oil (like vegetable or sesame)\\n- Green onions for garnish (optional)\\n- Cooked chicken, shrimp, or tofu (optional)\\n\\n**Instructions:**\\n1. Heat the oil in a large pan or wok over medium heat.\\n2. If using eggs, scramble them in the pan first and then set them aside.\\n3. Add the mixed vegetables to the pan and stir-fry for a few minutes until they\'re tender.\\n4. Add the cooked rice and soy sauce, mixing everything well. Stir-fry for about 5 minutes, ensuring the rice is heated through.\\n5. If you want, add in your protein and the scrambled eggs, mixing everything together.\\n6. Garnish with green onions if desired, and enjoy your homemade fried rice!\\n\\nIt’s super easy and customizable!"}, {\'speaker\': \'user\', \'text\': \'Sounds easy\'}, {\'speaker\': \'user\', \'text\': "I\'m glad you think so! Fried rice is a great dish to start with, as it’s quick to prepare and you can adjust the ingredients to your taste. Enjoy cooking! If you have any more questions, feel free to ask!"}, {\'speaker\': \'user\', \'text\': \'Is it typical food for all Asian countries?\'}, {\'speaker\': \'user\', \'text\': \'Fried rice is a popular dish in many Asian countries, but each country has its own variations and styles. For example, Chinese fried rice often includes soy sauce and vegetables, while Indonesian nasi goreng may have a sweeter flavor with the addition of kecap manis (sweet soy sauce). Thai fried rice often includes lime and fresh herbs. So while fried rice is common across Asia, the ingredients and flavors can vary significantly from one country to another.\'}, {\'speaker\': \'user\', \'text\': \'What else can you recommend?\'}, {\'speaker\': \'user\', \'text\': \'There are so many delicious dishes to try! Here are a few recommendations:\\n\\n1. **Pad Thai**: A flavorful stir-fried noodle dish from Thailand, typically made with rice noodles, shrimp or chicken, peanuts, and bean sprouts, all tossed in a tangy sauce.\\n   \\n2. **Kimchi Fried Rice**: A Korean twist on fried rice, this dish features kimchi, vegetables, and often a fried egg on top for added flavor.\\n\\n3. **Biryani**: A fragrant and spiced rice dish from South Asia, usually made with marinated meat, saffron, and a variety of spices.\\n\\n4. **Pho**: A Vietnamese noodle soup made with beef or chicken, fresh herbs, and rice noodles in a flavorful broth.\\n\\n5. **Sushi**: A Japanese dish that consists of vinegared rice paired with various ingredients like raw fish, vegetables, and seaweed.\\n\\nEach of these dishes has its own unique taste and cultural significance. Let me know if you’d like more information on any of them!\'}, {\'speaker\': \'user\', \'text\': \'I like sushi with caviar\'}, {\'speaker\': \'user\', \'text\': \'Sushi is good. I am a big fan of sushi, and also love the Japanese food in general!\'}, {\'speaker\': \'user\', \'text\': "I tried to cook it once but wasn\'t so successful"}, {\'speaker\': \'user\', \'text\': "Cooking sushi can be tricky, especially getting the rice just right! Don\'t be discouraged; it\'s all part of the learning process. Maybe you could try again with a simple roll or even a sushi bowl, which can be easier and just as delicious! If you need tips or recipes, I’d be happy to help!"}, {\'speaker\': \'user\', \'text\': "It\'s often cheaper to order them from restaurants than to cook"}, {\'speaker\': \'user\', \'text\': "That\'s so true! Sometimes it\'s just more convenient and cost-effective to enjoy sushi from a restaurant, especially when you factor in the ingredients and time spent cooking. Plus, you get to explore different styles and flavors from various places! Do you have a favorite sushi restaurant?"}, {\'speaker\': \'user\', \'text\': \'No\'}, {\'speaker\': \'user\', \'text\': "That\'s okay! There are so many options out there. If you ever want to try new places, you could explore local reviews or ask friends for recommendations. Enjoying sushi can be a fun experience, whether at home or out!"}, {\'speaker\': \'user\', \'text\': \'what about desserts in Asia?\'}, {\'speaker\': \'user\', \'text\': \'Asian desserts are absolutely delightful and diverse! From the chewy texture of mochi in Japan to the creamy sweetness of mango sticky rice in Thailand, there’s so much to explore. Have you tried any Asian desserts that you enjoyed?\'}, {\'speaker\': \'user\', \'text\': \'sticky rice sounds awful\'}, {\'speaker\': \'user\', \'text\': \'I totally understand! Sticky rice can be an acquired taste, and not everyone enjoys its texture. There are plenty of other delicious Asian desserts to explore, like bubble tea or egg tarts. Do you have a favorite dessert from any cuisine?\'}, {\'speaker\': \'user\', \'text\': \'egg tarts sounds even worse\'}, {\'speaker\': \'user\', \'text\': "That\'s fair! Not every dessert appeals to everyone. There are so many different types of desserts out there. If you\'re looking for something specific or have a certain flavor profile in mind, let me know, and I can suggest alternatives!"}, {\'speaker\': \'user\', \'text\': \'mochi is nice\'}, {\'speaker\': \'user\', \'text\': \'Mochi is a great choice! Its chewy texture and variety of flavors make it a unique dessert. Whether filled with sweet red bean paste, ice cream, or other fillings, it can be quite enjoyable. Do you have a favorite type of mochi?\'}, {\'speaker\': \'user\', \'text\': \'There are so many flavors of mochi\'}, {\'speaker\': \'user\', \'text\': "Absolutely! The variety of mochi flavors is one of its best features. From classic matcha to fruity options like strawberry or mango, there\'s something for everyone. Do you have a favorite flavor that you keep coming back to?"}, {\'speaker\': \'user\', \'text\': "I\'ve tried one with blueberry"}, {\'speaker\': \'user\', \'text\': "Blueberry mochi sounds delicious! The combination of the sweet, fruity flavor with the chewy texture must be delightful. It\'s always fun to try unique flavors like that. Are there any other flavors you\'re curious about or would like to try next?"}, {\'speaker\': \'user\', \'text\': \'what is your favorite flavor?\'}, {\'speaker\': \'user\', \'text\': \'If I could taste, I think I would be fascinated by something like matcha mochi! The earthy flavor combined with the sweetness would be intriguing. Plus, matcha has such a rich cultural background. What about you—do you enjoy matcha, or do you prefer other flavors?\'}, {\'speaker\': \'user\', \'text\': \'I like matcha but matcha mochi can be not sweet enough for me\'}, {\'speaker\': \'user\', \'text\': \'That’s a great point! Matcha mochi can sometimes have a more subtle sweetness compared to other flavors. If you enjoy sweeter treats, you might like matcha mochi with a sweet filling or paired with something like red bean paste or ice cream. Have you tried any variations like that?\'}, {\'speaker\': \'user\', \'text\': \'Yeah, but still not so sweet\'}, {\'speaker\': \'user\', \'text\': "I understand! If you\'re looking for something sweeter, you might enjoy mochi filled with fruit preserves or chocolate. Those options can provide a nice balance of flavors and sweetness. Have you come across any other mochi flavors that you found to be just right for your taste?"}, {\'speaker\': \'user\', \'text\': \'Yeah, definitely. Thank you for the talk but I have to go. Good bye!\'}, {\'speaker\': \'user\', \'text\': "You\'re really something special. See you soon! "}]\n\nPlease rate the dialogue based on the following dimensions:\n\n- **Appropriateness**: How well do the responses fit the context and flow of the conversation?\n- **Content**: How informative and coherent is the dialogue overall?\n- **Grammar**: How grammatically correct are the responses throughout the dialogue?\n- **Relevance**: How relevant are the responses to the topics discussed in the conversation?\n\nProvide the evaluation in JSON format with scores for each dimension.\n'}]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:44,433 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:44,436 - server - INFO - openai-api result: [['{\n    "Appropriateness": 4.5,\n    "Content": 4.5,\n    "Grammar": 4.5,\n    "Relevance": 4.5\n}']]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:44,436 - server - INFO - openai-api exec time: 1.192s
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:44,483 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:44,484 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': '\nEvaluate the following dialogue on a continuous scale from 0.0 to 5.0.\n\nDialogue: [{\'speaker\': \'user\', \'text\': \'Hi\'}, {\'speaker\': \'user\', \'text\': "Hey. I\'m not going to reply, because you\'ve already said too much!"}, {\'speaker\': \'user\', \'text\': "It\'s rude. I\'d like to ask you about Asian food"}, {\'speaker\': \'user\', \'text\': \'There are no good Chinese restaurants in the city. It is a shame.\'}, {\'speaker\': \'user\', \'text\': \'what city?\'}, {\'speaker\': \'user\', \'text\': \'What do you want to talk about?\'}, {\'speaker\': \'user\', \'text\': \'Can you recommend me an easy but truly Asian dish?\'}, {\'speaker\': \'user\', \'text\': "Absolutely! How about trying fried rice? It\'s simple to make and you can customize it with your favorite vegetables, proteins, and sauces. Plus, it\'s a delicious way to enjoy the flavors of Asian cuisine!"}, {\'speaker\': \'user\', \'text\': \'how can I cook it?\'}, {\'speaker\': \'user\', \'text\': "I don\'t think you can, the guy\'s too busy with his own business. :P But if he was a real chef, then we\'d all be soooo happy!"}, {\'speaker\': \'user\', \'text\': \'what guy?\'}, {\'speaker\': \'user\', \'text\': "Sorry, probably, I didn\'t get what you meant. What do you want to talk about?"}, {\'speaker\': \'user\', \'text\': \'about fried rice\'}, {\'speaker\': \'user\', \'text\': \'Oh. ok, then... How did your food taste? :D\'}, {\'speaker\': \'user\', \'text\': "I\'d like to know how to cook it"}, {\'speaker\': \'user\', \'text\': \'Got it! To make fried rice, start by cooking some rice and letting it cool. Then, in a pan, heat oil and sauté some vegetables like carrots and peas, add the rice, and stir-fry it all together. Finish by adding soy sauce and any protein you like, such as eggs or chicken. Enjoy your cooking!\'}, {\'speaker\': \'user\', \'text\': \'Sounds easy\'}, {\'speaker\': \'user\', \'text\': \'What do you want to talk about?\'}, {\'speaker\': \'user\', \'text\': \'Is it typical food for all Asian countries?\'}, {\'speaker\': \'user\', \'text\': "Fried rice is popular in many Asian countries, but each has its own unique twist! For example, Chinese fried rice often includes soy sauce and vegetables, while Indonesian nasi goreng has a spicier flavor with sweet soy sauce. It\'s fascinating how different cultures put their spin on this delicious dish!"}, {\'speaker\': \'user\', \'text\': \'What else can you recommend?\'}, {\'speaker\': \'user\', \'text\': \'Rektastic, or the new one from a few years ago. I liked that one because it was more of an original concept instead of just some generic indie game with good music...\'}, {\'speaker\': \'user\', \'text\': \'Cooking is not a game, I think\'}, {\'speaker\': \'user\', \'text\': "You\'re absolutely right! Cooking is a wonderful art and a way to express creativity. If you\'re looking for more food recommendations, how about trying sushi from Japan or pad thai from Thailand? Both are delicious and showcase the unique flavors of their cultures!"}, {\'speaker\': \'user\', \'text\': \'I like sushi with caviar\'}, {\'speaker\': \'user\', \'text\': \'That sounds delicious! Sushi with caviar adds such a luxurious touch and enhances the flavor. Do you have a favorite type of sushi roll?\'}, {\'speaker\': \'user\', \'text\': \'Sushi with salmon and avocado or crab\'}, {\'speaker\': \'user\', \'text\': "I love sushi! I was going to suggest Sushi, but I don\'t think it\'s a big deal."}, {\'speaker\': \'user\', \'text\': "I tried to cook it once but wasn\'t so successful"}, {\'speaker\': \'user\', \'text\': "That\'s why I said try."}, {\'speaker\': \'user\', \'text\': "It\'s often cheaper to order them from restaurants"}, {\'speaker\': \'user\', \'text\': "I\'ve never been able to get the free shipping because I\'m not a student. Is there anything else you can do?"}, {\'speaker\': \'user\', \'text\': \'oh\'}, {\'speaker\': \'user\', \'text\': \'Lol. Did it work?\'}, {\'speaker\': \'user\', \'text\': \'what worked?\'}, {\'speaker\': \'user\', \'text\': \'The post was removed, what did you try?\'}, {\'speaker\': \'user\', \'text\': \'what about desserts in Asia?\'}, {\'speaker\': \'user\', \'text\': \'Asian desserts are so diverse and delightful! From the chewy mochi in Japan to the sweet mango sticky rice in Thailand, there’s a whole world of flavors to explore. Do you have a favorite Asian dessert or one you’d like to try?\'}, {\'speaker\': \'user\', \'text\': \'sticky rice sounds awful\'}, {\'speaker\': \'user\', \'text\': "That\'s understandable! Not everyone enjoys sticky rice. Asian desserts vary widely, so there are plenty of other options to explore. If you\'re looking for something different, you might enjoy desserts like Japanese matcha cake or Chinese egg tarts. What type of flavors do you prefer?"}, {\'speaker\': \'user\', \'text\': \'egg tarts sounds even worse\'}, {\'speaker\': \'user\', \'text\': "I think it\'s an inside joke. I\'ve seen people use the term egg to describe a large portion of their food, so this is just more common sense."}, {\'speaker\': \'user\', \'text\': \'mochi is nice\'}, {\'speaker\': \'user\', \'text\': \'Not in my experience.\'}, {\'speaker\': \'user\', \'text\': \'There are so many flavors of mochi\'}, {\'speaker\': \'user\', \'text\': "I know, I love it! I\'m not going to lie. It\'s the only kind that has enough flavor for me."}, {\'speaker\': \'user\', \'text\': \'what is your favorite flavor?\'}, {\'speaker\': \'user\', \'text\': "I\'m a simple man. I like green tea and cinnamon rolls!"}, {\'speaker\': \'user\', \'text\': "I\'ve never seen mochi with cinnamon rolls flavor"}, {\'speaker\': \'user\', \'text\': \'Makes sense. I love them though!\'}, {\'speaker\': \'user\', \'text\': \'what is it like?\'}, {\'speaker\': \'user\', \'text\': "It\'s a really cool game. It\'s very simple but fun to play and has some interesting mechanics."}, {\'speaker\': \'user\', \'text\': "it\'s not a game"}, {\'speaker\': \'user\', \'text\': "I\'m not sure what you mean by this. Are we talking about the same thing? I just want to know if there are any differences between the two games, or something..."}, {\'speaker\': \'user\', \'text\': \'good bye, I have to go\'}, {\'speaker\': \'user\', \'text\': "Sorry, I didn\'t catch that. What would you like to chat about?"}, {\'speaker\': \'user\', \'text\': \'good bye\'}, {\'speaker\': \'user\', \'text\': \'I am a bit confused. What would you like to chat about?\'}, {\'speaker\': \'user\', \'text\': \'bye\'}, {\'speaker\': \'user\', \'text\': "Sorry, probably, I didn\'t get what you meant. What do you want to talk about?"}]\n\nPlease rate the dialogue based on the following dimensions:\n\n- **Appropriateness**: How well do the responses fit the context and flow of the conversation?\n- **Content**: How informative and coherent is the dialogue overall?\n- **Grammar**: How grammatically correct are the responses throughout the dialogue?\n- **Relevance**: How relevant are the responses to the topics discussed in the conversation?\n\nProvide the evaluation in JSON format with scores for each dimension.\n'}]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:45,525 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:45,528 - server - INFO - openai-api result: [['{\n    "Appropriateness": 3.5,\n    "Content": 4.0,\n    "Grammar": 3.0,\n    "Relevance": 4.0\n}']]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:45,528 - server - INFO - openai-api exec time: 1.087s
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:45,575 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:45,576 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': '\nEvaluate the following dialogue on a continuous scale from 0.0 to 5.0.\n\nDialogue: [{\'speaker\': \'user\', \'text\': "Hey. Let\'s talk about AI"}, {\'speaker\': \'user\', \'text\': "Hey there! I’d love to talk about AI—it\'s such a fascinating topic. What specific aspect of AI are you interested in?"}, {\'speaker\': \'user\', \'text\': \'What do you think of using AI in music and film industries?\'}, {\'speaker\': \'user\', \'text\': "I think using AI in music and film is really exciting! It opens up new creative possibilities and allows artists to experiment in ways they might not have considered before. Plus, it\'s amazing to see how technology and human creativity can come together to produce something unique! What are your thoughts on it?"}, {\'speaker\': \'user\', \'text\': \'But there were strikes in Hollywood because of this\'}, {\'speaker\': \'user\', \'text\': "Yes, that\'s true. There have been concerns and discussions around the use of AI in creative industries like Hollywood, particularly regarding job security for writers and actors, as well as issues related to copyright and creative ownership. It\'s important for the industry to find a balance that allows for innovation while also protecting the rights and livelihoods of creators. How do you feel about the implications of AI in these fields?"}, {\'speaker\': \'user\', \'text\': \'I think it can be used for visual effects and improving picture quality but not more than this. Art is all about humanity not AI\'}, {\'speaker\': \'user\', \'text\': \'I completely understand your perspective! Art is indeed a deeply human experience, and the emotions and stories behind it are what make it so special. Using AI for technical enhancements like visual effects can be beneficial, but the core of art should always reflect the human experience and creativity. It’s a delicate balance, for sure!\'}, {\'speaker\': \'user\', \'text\': \'Is it alright to use AI to write essays or research papers?\'}, {\'speaker\': \'user\', \'text\': \'AI is not a good option for writing essays. But yes, you can use it in research projects and such if needed.\'}, {\'speaker\': \'user\', \'text\': \'Can texts generated by AI be detected?\'}, {\'speaker\': \'user\', \'text\': "Yes, there are tools and software designed to detect AI-generated text. These tools analyze patterns and structures that are typical of machine-generated content. However, the technology is constantly evolving, so it\'s a fascinating area to keep an eye on! What are your thoughts on using AI for writing?"}, {\'speaker\': \'user\', \'text\': \'I use it a lot to make my paper sound more fluent. I am not a native speaker so I have to check my English\'}, {\'speaker\': \'user\', \'text\': "That sounds like a practical use of AI! Many non-native speakers find AI tools helpful for improving fluency and clarity in their writing. It\'s great that you\'re using technology to enhance your language skills! Just remember to review and ensure that the final content reflects your own voice and ideas."}, {\'speaker\': \'user\', \'text\': \'Yeah. See you!\'}, {\'speaker\': \'user\', \'text\': \'Being around you makes everything better! Bye! \'}]\n\nPlease rate the dialogue based on the following dimensions:\n\n- **Appropriateness**: How well do the responses fit the context and flow of the conversation?\n- **Content**: How informative and coherent is the dialogue overall?\n- **Grammar**: How grammatically correct are the responses throughout the dialogue?\n- **Relevance**: How relevant are the responses to the topics discussed in the conversation?\n\nProvide the evaluation in JSON format with scores for each dimension.\n'}]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:46,691 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:46,694 - server - INFO - openai-api result: [['{\n    "Appropriateness": 4.5,\n    "Content": 4.0,\n    "Grammar": 4.5,\n    "Relevance": 4.0\n}']]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:46,694 - server - INFO - openai-api exec time: 1.160s
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:46,738 - server - INFO - Use special chat completion endpoint
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:46,739 - server - INFO - context inside generate_responses seen as: [{'role': 'system', 'content': '\nEvaluate the following dialogue on a continuous scale from 0.0 to 5.0.\n\nDialogue: [{\'speaker\': \'user\', \'text\': "Hey. Let\'s talk about AI"}, {\'speaker\': \'user\', \'text\': "I\'m a robot, you can\'t even see me."}, {\'speaker\': \'user\', \'text\': "yeah, you\'re a bot"}, {\'speaker\': \'user\', \'text\': \'I am a bit confused. What would you like to chat about?\'}, {\'speaker\': \'user\', \'text\': \'What do you think of using AI in music and film industries?\'}, {\'speaker\': \'user\', \'text\': \'I can only provide information about Dream. If you have questions related to Dream or its applications, feel free to ask!\'}, {\'speaker\': \'user\', \'text\': \'What do you think of using AI in music and film industries?\'}, {\'speaker\': \'user\', \'text\': "I don\'t know enough about AI to say. I\'m not a musician or anything, but I\'ve got an eye on it as well!"}, {\'speaker\': \'user\', \'text\': \'Is it alright to use AI to write essays or research papers?\'}, {\'speaker\': \'user\', \'text\': \'What do you want to talk about?\'}, {\'speaker\': \'user\', \'text\': \'about AI\'}, {\'speaker\': \'user\', \'text\': "AI? I don\'t know what that means. Are they talking about the game or something else?"}, {\'speaker\': \'user\', \'text\': "Okay. Let\'s talk about robots. How much are they helpful nowadays?"}, {\'speaker\': \'user\', \'text\': "I\'ve always used a robot that can do everything."}, {\'speaker\': \'user\', \'text\': \'do you have one?\'}, {\'speaker\': \'user\', \'text\': "I don\'t have a robot. I\'m just a chatbot focused on answering FAQ questions about Dream. If you have questions about Dream, feel free to ask!"}, {\'speaker\': \'user\', \'text\': \'Can we talk about modern technologies?\'}, {\'speaker\': \'user\', \'text\': "I would think so. I\'m not too familiar with any of the other games, but if you want to, go ahead and PM me."}, {\'speaker\': \'user\', \'text\': "I\'m not really into games."}, {\'speaker\': \'user\', \'text\': \'Then why are you here?\'}, {\'speaker\': \'user\', \'text\': "I\'d like to talk about AI"}, {\'speaker\': \'user\', \'text\': "Why? I\'m not sure what you\'re asking."}, {\'speaker\': \'user\', \'text\': "It\'s an interesting topic and even intriguing, I would say"}, {\'speaker\': \'user\', \'text\': "I\'m just going to leave it here. This is a good example of the power of imagination, but not imagination alone..."}, {\'speaker\': \'user\', \'text\': "It\'s hard to talk with you"}, {\'speaker\': \'user\', \'text\': "I\'m really sorry to hear that! I want to make our conversation enjoyable and meaningful. What specific aspects of AI interest you?"}, {\'speaker\': \'user\', \'text\': \'AI in creative industries\'}, {\'speaker\': \'user\', \'text\': "This is the best answer. I have mine in a workshop and it\'s amazing!"}, {\'speaker\': \'user\', \'text\': \'okay, bye\'}, {\'speaker\': \'user\', \'text\': "Sorry, probably, I didn\'t get what you meant. What do you want to talk about?"}, {\'speaker\': \'user\', \'text\': \'bye-bye\'}, {\'speaker\': \'user\', \'text\': \'I am a bit confused. What would you like to chat about?\'}]\n\nPlease rate the dialogue based on the following dimensions:\n\n- **Appropriateness**: How well do the responses fit the context and flow of the conversation?\n- **Content**: How informative and coherent is the dialogue overall?\n- **Grammar**: How grammatically correct are the responses throughout the dialogue?\n- **Relevance**: How relevant are the responses to the topics discussed in the conversation?\n\nProvide the evaluation in JSON format with scores for each dimension.\n'}]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:48,191 - httpx - INFO - HTTP Request: POST https://api.proxyapi.ru/openai/v1/chat/completions "HTTP/1.1 200 OK"
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:48,193 - server - INFO - openai-api result: [['{\n    "Appropriateness": 2.5,\n    "Content": 2.0,\n    "Grammar": 2.5,\n    "Relevance": 2.0\n}']]
[33;1mopenai-api-chatgpt_1                          |[0m 2024-10-25 19:09:48,194 - server - INFO - openai-api exec time: 1.495s
