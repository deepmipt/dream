services:
  agent:
    build:
      args:
        WAIT_HOSTS: sentseg:8011, entity-storer:8089, entity-detection:8103, entity-linking:8075,
          wiki-parser:8077, midas-classification:8090, midas-predictor:8121, factoid-qa:8071,
          dff-program-y-skill:8008, ranking-and-intent-based-response-selector-ru:8082
        WAIT_HOSTS_TIMEOUT: ${WAIT_TIMEOUT:-480}
        HIGH_PRIORITY_INTENTS: 1
        RESTRICTION_FOR_SENSITIVE_CASE: 1
        ALWAYS_TURN_ON_ALL_SKILLS: 0
        LANGUAGE: EN
        FALLBACK_FILE: fallbacks_dream_en.json
    command: sh -c 'bin/wait && python -m deeppavlov_agent.run agent.pipeline_config=assistant_dists/ai_faq_assistant/pipeline_conf.json'
    environment:
      WAIT_HOSTS: sentseg:8011, entity-storer:8089, entity-detection:8103, entity-linking:8075,
        wiki-parser:8077, midas-classification:8090, midas-predictor:8121, factoid-qa:8071,
        dff-program-y-skill:8008, ranking-and-intent-based-response-selector-ru:8082
      WAIT_HOSTS_TIMEOUT: ${WAIT_TIMEOUT:-480}
      HIGH_PRIORITY_INTENTS: 1
      RESTRICTION_FOR_SENSITIVE_CASE: 1
      ALWAYS_TURN_ON_ALL_SKILLS: 0
      LANGUAGE: EN
      FALLBACK_FILE: fallbacks_dream_en.json
  sentseg:
    env_file:
    - .env
    build:
      args:
        FLASK_APP: server
      context: annotators/SentSeg
    command: flask run -h 0.0.0.0 -p 8011
    environment:
      FLASK_APP: server
    deploy:
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 1.5G
  entity-storer:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8089
        SERVICE_NAME: entity_storer
        WORK_DIR: annotators/entity_storer
        FLASK_APP: server
      context: .
      dockerfile: annotators/entity_storer/Dockerfile
    command: flask run -h 0.0.0.0 -p 8089
    environment:
      SERVICE_PORT: 8089
      SERVICE_NAME: entity_storer
      WORK_DIR: annotators/entity_storer
      FLASK_APP: server
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 384M
  entity-detection:
    env_file:
    - .env
    build:
      args:
        SERVICE_NAME: entity_detection
        SEQ_TAG_CONFIG: wikipedia_entity_detection_distilbert.json
        CONFIG: entity_detection_eng.json
        LOWERCASE: 1
        SERVICE_PORT: 8103
        SRC_DIR: annotators/entity_detection/
        FINEGRAINED: 0
        FLASK_APP: server
        CUDA_VISIBLE_DEVICES: '0'
      context: .
      dockerfile: annotators/entity_detection/Dockerfile
    command: flask run -h 0.0.0.0 -p 8103
    environment:
      SERVICE_NAME: entity_detection
      SEQ_TAG_CONFIG: wikipedia_entity_detection_distilbert.json
      CONFIG: entity_detection_eng.json
      LOWERCASE: 1
      SERVICE_PORT: 8103
      SRC_DIR: annotators/entity_detection/
      FINEGRAINED: 0
      FLASK_APP: server
      CUDA_VISIBLE_DEVICES: '0'
    deploy:
      resources:
        limits:
          memory: 2.5G
        reservations:
          memory: 2.5G
  entity-linking:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8075
        SERVICE_NAME: entity_linking
        CONFIG: entity_linking_eng.json
        SRC_DIR: annotators/entity_linking
        CUDA_VISIBLE_DEVICES: '0'
      context: .
      dockerfile: annotators/entity_linking/Dockerfile
    environment:
      SERVICE_PORT: 8075
      SERVICE_NAME: entity_linking
      CONFIG: entity_linking_eng.json
      SRC_DIR: annotators/entity_linking
      CUDA_VISIBLE_DEVICES: '0'
    deploy:
      resources:
        limits:
          memory: 23G
        reservations:
          memory: 23G
  wiki-parser:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8077
        SERVICE_NAME: wiki_parser
        WIKI_LITE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata2022.hdt
        WIKI_LITE_INDEX_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata2022.hdt.index.v1-1
        WIKI_CACHE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_cache.json
        CONFIG: wiki_parser.json
        SRC_DIR: annotators/wiki_parser
        COMMIT: ff5b156d16a949c3ec99da7fb60ae907dec37a41
        FAST: 1
        CUDA_VISIBLE_DEVICES: ''''''
        FLASK_APP: server
      context: .
      dockerfile: annotators/wiki_parser/Dockerfile
    command: flask run -h 0.0.0.0 -p 8077
    environment:
      SERVICE_PORT: 8077
      SERVICE_NAME: wiki_parser
      WIKI_LITE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata2022.hdt
      WIKI_LITE_INDEX_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata2022.hdt.index.v1-1
      WIKI_CACHE_DB: http://files.deeppavlov.ai/kbqa/wikidata/wikidata_cache.json
      CONFIG: wiki_parser.json
      SRC_DIR: annotators/wiki_parser
      COMMIT: ff5b156d16a949c3ec99da7fb60ae907dec37a41
      FAST: 1
      CUDA_VISIBLE_DEVICES: ''''''
      FLASK_APP: server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M
  combined-classification:
    env_file: [ .env ]
    build:
      args:
        SERVICE_PORT: 8087
        SERVICE_NAME: combined_classification
        CONFIG: combined_classifier.json
      context: .
      dockerfile: ./annotators/combined_classification/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8087 --timeout 600
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 2G
  factoid-qa:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8071
        SERVICE_NAME: factoid_qa
        FLASK_APP: server
      context: .
      dockerfile: skills/factoid_qa/Dockerfile
    command: flask run -h 0.0.0.0 -p 8071
    environment:
      SERVICE_PORT: 8071
      SERVICE_NAME: factoid_qa
      FLASK_APP: server
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 256M
  dff-program-y-skill:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8008
        SERVICE_NAME: dff_program_y_skill
        LANGUAGE: EN
      context: .
      dockerfile: skills/dff_program_y_skill/Dockerfile
    command: gunicorn --workers=1 server:app -b 0.0.0.0:8008 --reload
    environment:
      SERVICE_PORT: 8008
      SERVICE_NAME: dff_program_y_skill
      LANGUAGE: EN
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 1024M
  ranking-and-intent-based-response-selector-ru:
    env_file:
    - .env
    build:
      args:
        SERVICE_PORT: 8082
        SERVICE_NAME: response_selector
        SENTENCE_RANKER_ANNOTATION_NAME: dialogrpt
        SENTENCE_RANKER_SERVICE_URL: http://dialogrpt-ru:8122/rank_sentences
        SENTENCE_RANKER_TIMEOUT: 3
        N_UTTERANCES_CONTEXT: 5
        FILTER_TOXIC_OR_BADLISTED: 1
        FLASK_APP: server
      context: .
      dockerfile: response_selectors/ranking_and_intent_based_response_selector/Dockerfile
    command: flask run -h 0.0.0.0 -p 8082
    environment:
      SERVICE_PORT: 8082
      SERVICE_NAME: response_selector
      SENTENCE_RANKER_ANNOTATION_NAME: dialogrpt
      SENTENCE_RANKER_SERVICE_URL: http://dialogrpt-ru:8122/rank_sentences
      SENTENCE_RANKER_TIMEOUT: 3
      N_UTTERANCES_CONTEXT: 5
      FILTER_TOXIC_OR_BADLISTED: 1
      FLASK_APP: server
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 100M
version: '3.7'
